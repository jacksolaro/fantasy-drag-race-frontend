[{"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\index.js":"1","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\App.js":"2","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Leagues\\Leagues.js":"5","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Footer\\Footer.js":"6","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Home\\Home.js":"7","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Jumbotron\\Jumbotron.js":"8","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\JoinLeague\\JoinLeague.js":"9","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\CreateLeague\\CreateLeague.js":"10","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ShowCard\\ShowCard.js":"11","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SignUp\\SignUp.js":"12","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\contexts\\AuthContext.js":"13","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\firebase.js":"14","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Login\\Login.js":"15","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ForgotPassword\\ForgotPassword.js":"16","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\LeagueDetails\\LeagueDetails.js":"17","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectSeasonRoster\\SelectSeasonRoster.js":"18","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectEpisodeRoster\\SelectEpisodeRoster.js":"19","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeJumbotron\\HomeJumbotron.js":"20","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeInstructions\\HomeInstructions.js":"21","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\queenSelect\\queenSelect.js":"22","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\QueenSelect\\QueenSelect.js":"23"},{"size":634,"mtime":1610503657888,"results":"24","hashOfConfig":"25"},{"size":3065,"mtime":1610510677906,"results":"26","hashOfConfig":"25"},{"size":377,"mtime":1606862747486,"results":"27","hashOfConfig":"25"},{"size":3092,"mtime":1610496559386,"results":"28","hashOfConfig":"25"},{"size":3803,"mtime":1610491582694,"results":"29","hashOfConfig":"25"},{"size":1679,"mtime":1609174937822,"results":"30","hashOfConfig":"25"},{"size":2196,"mtime":1609876864024,"results":"31","hashOfConfig":"25"},{"size":663,"mtime":1609905132656,"results":"32","hashOfConfig":"25"},{"size":2541,"mtime":1610163240630,"results":"33","hashOfConfig":"25"},{"size":3496,"mtime":1610511968564,"results":"34","hashOfConfig":"25"},{"size":2458,"mtime":1610003315340,"results":"35","hashOfConfig":"25"},{"size":6679,"mtime":1610511491324,"results":"36","hashOfConfig":"25"},{"size":1746,"mtime":1609263754184,"results":"37","hashOfConfig":"25"},{"size":815,"mtime":1609264089055,"results":"38","hashOfConfig":"25"},{"size":5344,"mtime":1610510433583,"results":"39","hashOfConfig":"25"},{"size":5418,"mtime":1610511358255,"results":"40","hashOfConfig":"25"},{"size":20759,"mtime":1610491782213,"results":"41","hashOfConfig":"25"},{"size":5368,"mtime":1610244388504,"results":"42","hashOfConfig":"25"},{"size":7893,"mtime":1610242563020,"results":"43","hashOfConfig":"25"},{"size":1087,"mtime":1609876367063,"results":"44","hashOfConfig":"25"},{"size":2591,"mtime":1610394189653,"results":"45","hashOfConfig":"25"},{"size":1961,"mtime":1610136760233,"results":"46","hashOfConfig":"25"},{"size":1961,"mtime":1610136760233,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mhqtdp",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\index.js",["105","106","107","108"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\App.js",["109","110"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\reportWebVitals.js",[],["111","112"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Nav\\Nav.js",["113","114","115","116","117"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\nimport derbyLogo from \"../../assets/images/derby_logo_white-01.png\";\r\n\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Nav() {\r\n  const { currentUser, logout } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  // Open / Close Drawer for Mobile Nav\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (typeof event === \"undefined\") {\r\n      return;\r\n    }\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  // Handle Log Out\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n      history.pushState(\"/login\");\r\n    } catch {\r\n      setError(\"Failed to log out\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"\">\r\n      <div className={`nav`}>\r\n        <Link className=\"nav-logo\" to=\"/\">\r\n          <img src={derbyLogo} alt=\"Derby Logo\" className=\"nav-logo\"></img>\r\n        </Link>\r\n\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={isExpanded}\r\n          onClose={toggleDrawer(\"right\", false)}\r\n        >\r\n          <div className=\"drawer\">\r\n            <ul className=\"drawer__list\">\r\n              <Link to=\"/\" className=\"drawer__item\">\r\n                Shows\r\n              </Link>\r\n              <Link to=\"/leagues\" className=\"drawer__item\">\r\n                Leagues\r\n              </Link>\r\n            </ul>\r\n          </div>\r\n        </Drawer>\r\n\r\n        <ul>\r\n          {!currentUser && (\r\n            <>\r\n              <Link className=\"nav-link\" to=\"/login\">\r\n                <li className=\"nav-item button__logout\">Log In</li>\r\n              </Link>\r\n              <Link className=\"nav-link\" to=\"/signup\">\r\n                <li className=\"nav-item button__logout\">Sign Up</li>\r\n              </Link>\r\n            </>\r\n          )}\r\n          {currentUser && (\r\n            <>\r\n              <Link className=\"nav-link\" to=\"/\" onClick={handleLogout}>\r\n                <li className=\"nav-item button__logout\">Log Out</li>\r\n              </Link>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/leagues\">\r\n                  Leagues\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  Shows\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className=\"nav__hamburger\">\r\n          <MenuIcon\r\n            onClick={toggleDrawer(\"right\", true)}\r\n            style={{ color: \"#FFFFFF\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Leagues\\Leagues.js",["118","119"],"import React, { useEffect, useState } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport leaguePageBkg from \"../../assets/images/bkg-3.jpg\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { db } from \"../../firebase.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Card, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport \"./Leagues.css\";\r\nimport AddCircleOutlineRoundedIcon from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport AssignmentTwoToneIcon from \"@material-ui/icons/AssignmentTwoTone\";\r\n\r\nfunction Leagues() {\r\n  const { currentUser } = useAuth();\r\n  const [leagues, setLeagues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"leagues\")\r\n      .where(\"members\", \"array-contains\", currentUser.uid)\r\n      .onSnapshot((snapshot) => {\r\n        setLeagues(snapshot.docs.map((doc) => doc));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Leagues__Wrapper\">\r\n      <Jumbotron\r\n        image={leaguePageBkg}\r\n        height=\"300\"\r\n        headline=\"YOUR LEAGUES\"\r\n      ></Jumbotron>\r\n      <Container>\r\n        <h1>YOUR LEAGUES</h1>\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam\r\n        </p>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={3} align=\"center\">\r\n            <Link to=\"/createleague\" style={{ textDecoration: \"none\" }}>\r\n              <div\r\n                className=\"Leagues__Card Leagues__CreateLeagueCard\"\r\n                style={{ backgroundColor: \"#0099ff\" }}\r\n              >\r\n                <div>\r\n                  <AddCircleOutlineRoundedIcon\r\n                    className=\"Leagues__Icon\"\r\n                    style={{ fontSize: 100, color: \"white\" }}\r\n                  ></AddCircleOutlineRoundedIcon>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    component=\"h2\"\r\n                    align=\"center\"\r\n                  >\r\n                    <Box fontWeight=\"fontWeightBold\" m={1}>\r\n                      CREATE A LEAGUE\r\n                    </Box>\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </Grid>\r\n          {leagues.map((league) => (\r\n            <Grid item xs={12} md={3} align=\"center\">\r\n              <Link\r\n                to={`/leagues/${league.id}`}\r\n                style={{ textDecoration: \"none\", color: \"#0099ff\" }}\r\n              >\r\n                <div className=\"Leagues__Card\">\r\n                  <div>\r\n                    <AssignmentTwoToneIcon\r\n                      className=\"Leagues__Icon\"\r\n                      style={{ fontSize: 100 }}\r\n                    ></AssignmentTwoToneIcon>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h4\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Box fontWeight=\"fontWeightBold\" m={1}>\r\n                        {league.data().leagueName}\r\n                      </Box>\r\n                    </Typography>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h6\"\r\n                      component=\"h6\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Box fontWeight=\"\" m={1}>\r\n                        RuPaul's Drag Race US S13\r\n                      </Box>\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leagues;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Home\\Home.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Jumbotron\\Jumbotron.js",["120"],"import React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nfunction Jumbotron(props) {\r\n  const jumbotron__style = {\r\n    // backgroundImage: `url(${props.image})`,\r\n    height: `${props.height}px`,\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron__main\" style={jumbotron__style}>\r\n        <div className=\"jumbotron__content\">\r\n          <h1 className=\"jumbotron__title\">\r\n            <strong>{props.headline}</strong>\r\n          </h1>\r\n          <img className=\"jumbotron__logo\" src={props.logo}></img>\r\n          <p className=\"jumbotron__subtitle\">{props.subtitle}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\JoinLeague\\JoinLeague.js",["121"],"import React from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport joinLeagueBkg from \"../../assets/images/bkg-2.jpg\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { db } from \"../../firebase.js\";\r\nimport firebase from \"firebase/app\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport \"./JoinLeague.css\";\r\n\r\nfunction JoinLeague() {\r\n  let params = useParams();\r\n  const { currentUser } = useAuth();\r\n  const [formData, setFormData] = React.useState({\r\n    leagueID: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    db.collection(\"leagues\")\r\n      .doc(formData.leagueID)\r\n      .update({\r\n        members: firebase.firestore.FieldValue.arrayUnion(currentUser.uid),\r\n        scores: firebase.firestore.FieldValue.arrayUnion({\r\n          email: currentUser.email,\r\n          score: 0,\r\n          userID: currentUser.uid,\r\n        }),\r\n      });\r\n\r\n    db.collection(`leagues`)\r\n      .doc(formData.leagueID)\r\n      .collection(\"picks\")\r\n      .add({\r\n        userID: currentUser.uid,\r\n        username: currentUser.displayName,\r\n      })\r\n      .then(function (docRef) {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function (error) {\r\n        // setError(\"Error writing document: \", error);\r\n        console.log(\"ERROR \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"JoinLeague__Wrapper\">\r\n      <Jumbotron\r\n        image={joinLeagueBkg}\r\n        height=\"300\"\r\n        headline=\"JOIN A LEAGUE\"\r\n      ></Jumbotron>\r\n      <Container maxWidth=\"md\">\r\n        <h1>Join a League</h1>\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam\r\n        </p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <TextField\r\n              required\r\n              name=\"leagueID\"\r\n              id=\"leagueID\"\r\n              label=\"League ID\"\r\n              defaultValue=\"\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button>JOIN LEAGUE</button>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinLeague;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\CreateLeague\\CreateLeague.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ShowCard\\ShowCard.js",["122"],"import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport \"./ShowCard.css\";\r\n\r\nfunction ShowCard(props) {\r\n  return (\r\n    <Card className=\"Home__SeasonCard\" style={{ backgroundColor: \"#EEE\" }}>\r\n      <CardActionArea className=\"Home__SeasonCardWrap cardContent\">\r\n        <img className=\"Home__SeasonCardImg\" src={props.posterIMG}></img>\r\n        <CardMedia\r\n          className=\"cardContent\"\r\n          image={s13Poster}\r\n          title=\"S13 Poster\"\r\n        />\r\n        <CardContent className=\"cardContent\">\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.season}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\r\n          {props.isActive ? (\r\n            <>\r\n              <Grid item xs={6} align=\"center\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  href=\"/createleague\"\r\n                  target=\"\"\r\n                  className=\"leagueBtn\"\r\n                >\r\n                  Create A League\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6} align=\"center\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  href=\"/joinleague\"\r\n                  target=\"\"\r\n                  className=\"leagueBtn\"\r\n                >\r\n                  Join a League\r\n                </Button>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Typography\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n              component=\"h5\"\r\n              align=\"center\"\r\n            >\r\n              COMING SOON\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ShowCard;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SignUp\\SignUp.js",["123","124"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\firebase.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Login\\Login.js",["125","126"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ForgotPassword\\ForgotPassword.js",["127","128","129","130","131","132","133"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\LeagueDetails\\LeagueDetails.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\nimport leaguePageBkg from \"../../assets/images/bkg-3.jpg\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport { db } from \"../../firebase.js\";\nimport firebase from \"firebase\";\nimport \"./leagueDetails.css\";\nimport { Pagination } from \"@material-ui/lab\";\nimport AddCircleOutlineRoundedIcon from \"@material-ui/icons/AddCircleOutlineRounded\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction LeagueDetails() {\n  let params = useParams();\n  const classes = useStyles();\n  const { currentUser } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [leagueData, setLeagueData] = useState([{}]);\n  const [resultsData, setResultsData] = useState([{}]);\n  const [pickData, setPickData] = useState([{}]);\n  const [page, setPage] = React.useState(1);\n  const [currTime, setCurrTime] = useState();\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  // RETRIEVE THE LEAGUE DATA (NAME, MEMBERS, SHOW ID, RESULTS, ETC)\n  useEffect(() => {\n    db.collection(\"leagues\")\n      .doc(params.id)\n      .get()\n      .then((doc) => {\n        console.log(\"LEAGUE DATA\", doc.data());\n        setLeagueData(doc.data());\n        db.collection(\"shows\")\n          .doc(doc.data().showID)\n          .get()\n          .then((doc) => {\n            console.log(\"RESULTS DATA\", doc.data().results);\n            setResultsData(doc.data().results);\n            // console.log(resultsData.episode1.airDate);\n          });\n      })\n      .catch((error) => console.log(\"Error\", error));\n  }, []);\n\n  // RETRIEVE ALL PICK DATA FOR USERS IN LEAGUE\n  useEffect(() => {\n    setLoading(true);\n    let pickDataArr = [];\n    db.collection(\"leagues\")\n      .doc(params.id)\n      .collection(\"picks\")\n      .get()\n      .then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          pickDataArr.push(doc.data());\n          console.log(\"DOC DATA\", doc.data());\n        });\n        setPickData(pickDataArr);\n        setLoading(false);\n      })\n      .catch((error) => console.log(\"Error\", error));\n  }, []);\n\n  // // RETRIEVE CURRENT DATE AND TIME\n  // useEffect(() => {\n  //   setInterval(() => {\n  //     setCurrTime(Date().toLocaleString());\n  //   }, 1000);\n  // });\n\n  // TAKES ALL THE USERS EPISODE ROSTERS, RENDERS THEM ON PAGE AND DISPLAYS POINTS\n  function renderEpisodePicks(episodeNum) {\n    // If page is loading, display Loading\n    if (loading) {\n      return <div className=\"episodePaginationNoResultBox\">LOADING</div>;\n      // If not loading, do the following\n    } else {\n      if (pickData[0].picks !== undefined) {\n        // retrieve user data\n        const userData = JSON.parse(JSON.stringify(pickData)).filter(\n          (user) => user.userID === currentUser.uid\n        );\n\n        // set episodePicks to the array of the users picks for that episode\n        const episodePicks = JSON.parse(\n          JSON.stringify(userData[0].picks)\n        ).filter((list) => list.category === `episode${episodeNum}`);\n\n        // If episode picks is not empty, render the episode picks\n        if (episodePicks.length > 0) {\n          return (\n            <TableContainer>\n              {/* <p>{resultsData[`episode${episodeNum}`][\"airDate\"]}</p> */}\n              <Table aria-label=\"simple table\" size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Category</TableCell>\n                    <TableCell>Queen Image</TableCell>\n                    <TableCell>Your Pick</TableCell>\n                    <TableCell>Points Awarded</TableCell>\n                    <TableCell>Points Possible</TableCell>\n                  </TableRow>\n                </TableHead>\n                {episodePicks[0].picks.map((pick) => (\n                  <TableBody>\n                    <TableRow key={pick.queenID}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {pick.pointCategory}\n                      </TableCell>\n                      <TableCell>\n                        <img\n                          className={\n                            resultsData[`${episodePicks[0].category}`]\n                              ? resultsData[`${episodePicks[0].category}`][\n                                  `${pick.id}`\n                                ]\n                                ? resultsData[`${episodePicks[0].category}`][\n                                    `${pick.id}`\n                                  ].includes(pick.queenID)\n                                  ? \"leagueDetails__rosterIMG2\"\n                                  : \"leagueDetails__rosterIMG\"\n                                : \"leagueDetails__rosterIMG\"\n                              : \"leagueDetails__rosterIMG\"\n                          }\n                          src={pick.queenIMG}\n                        ></img>\n                      </TableCell>\n                      <TableCell>{pick.queenName}</TableCell>\n                      <TableCell>\n                        {resultsData[`${episodePicks[0].category}`]\n                          ? resultsData[`${episodePicks[0].category}`][\n                              `${pick.id}`\n                            ]\n                            ? resultsData[`${episodePicks[0].category}`][\n                                `${pick.id}`\n                              ].includes(pick.queenID)\n                              ? pick.pointValue\n                              : 0\n                            : \"?\"\n                          : \"?\"}\n                      </TableCell>\n                      <TableCell>{pick.pointValue}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                ))}\n              </Table>\n            </TableContainer>\n          );\n        } else {\n          if (resultsData) {\n            if (resultsData[`episode${page}`]) {\n              if (\n                resultsData[`episode${page}`][\"airDate\"][\"seconds\"] <\n                new Date().getTime()\n              ) {\n                return (\n                  <p>\n                    This episode has passed. You may no longer make selections\n                    for this episode.\n                  </p>\n                );\n              } else {\n                return (\n                  <div className=\"episodePaginationNoResultBox\">\n                    <div>\n                      <AddCircleOutlineRoundedIcon />\n                    </div>\n                    <Link\n                      to={`/leagues/${params.id}/selectepisoderoster/${page}`}\n                    >\n                      &ensp; Select Roster for Episode {page}\n                    </Link>\n                  </div>\n                );\n              }\n            } else {\n              return (\n                <div className=\"episodePaginationNoResultBox\">\n                  <div>\n                    <AddCircleOutlineRoundedIcon />\n                  </div>\n                  <Link\n                    to={`/leagues/${params.id}/selectepisoderoster/${page}`}\n                  >\n                    &ensp; Select Roster for Episode {page}\n                  </Link>\n                </div>\n              );\n            }\n          } else {\n            return (\n              <div className=\"episodePaginationNoResultBox\">\n                <div>\n                  <AddCircleOutlineRoundedIcon />\n                </div>\n                <Link to={`/leagues/${params.id}/selectepisoderoster/${page}`}>\n                  &ensp; Select Roster for Episode {page}\n                </Link>\n              </div>\n            );\n          }\n        }\n      } else {\n        if (resultsData) {\n          if (resultsData[`episode${page}`]) {\n            if (\n              resultsData[`episode${page}`][\"airDate\"][\"seconds\"] <\n              new Date().getTime()\n            ) {\n              return (\n                <p>\n                  This episode has passed. You may no longer make selections for\n                  this episode.\n                </p>\n              );\n            } else {\n              return (\n                <div className=\"episodePaginationNoResultBox\">\n                  <div>\n                    <AddCircleOutlineRoundedIcon />\n                  </div>\n                  <Link\n                    to={`/leagues/${params.id}/selectepisoderoster/${page}`}\n                  >\n                    &ensp; Select Roster for Episode {page}\n                  </Link>\n                </div>\n              );\n            }\n          } else {\n            return (\n              <div className=\"episodePaginationNoResultBox\">\n                <div>\n                  <AddCircleOutlineRoundedIcon />\n                </div>\n                <Link to={`/leagues/${params.id}/selectepisoderoster/${page}`}>\n                  &ensp; Select Roster for Episode {page}\n                </Link>\n              </div>\n            );\n          }\n        } else {\n          return (\n            <div className=\"episodePaginationNoResultBox\">\n              <div>\n                <AddCircleOutlineRoundedIcon />\n              </div>\n              <Link to={`/leagues/${params.id}/selectepisoderoster/${page}`}>\n                &ensp; Select Roster for Episode {page}\n              </Link>\n            </div>\n          );\n        }\n      }\n    }\n  }\n\n  // TAKES ALL THE USERS SEASON ROSTERS, RENDERS THEM ON PAGE AND DISPLAYS POINTS\n  function renderSeasonPicks() {\n    if (loading) {\n      return <div className=\"episodePaginationNoResultBox\">LOADING</div>;\n    } else {\n      console.log(\"pickData\", pickData);\n\n      if (pickData[0].picks !== undefined) {\n        const userData = JSON.parse(JSON.stringify(pickData)).filter(\n          (user) => user.userID === currentUser.uid\n        );\n\n        const seasonPicks = JSON.parse(\n          JSON.stringify(userData[0].picks)\n        ).filter((list) => list.category === `season`);\n\n        if (seasonPicks.length > 0) {\n          return seasonPicks[0].picks.map((pick) => (\n            <Grid\n              className={\n                resultsData[\"season\"]\n                  ? resultsData[\"season\"][`${pick.id}`].includes(pick.queenID)\n                    ? \"leagueDetails__rosterIMG2\"\n                    : \"leagueDetails__rosterIMG\"\n                  : \"leagueDetails__rosterIMG\"\n              }\n              item\n              xs={12}\n              md={3}\n            >\n              <Typography align=\"center\" variant=\"h6\">\n                {pick.pointCategory}\n              </Typography>\n              <Typography align=\"center\" variant=\"subtitle2\">\n                {pick.pointValue} POINTS POSSIBLE\n              </Typography>\n              <img\n                className={\n                  resultsData[`${seasonPicks[0].category}`]\n                    ? resultsData[`${seasonPicks[0].category}`][`${pick.id}`]\n                      ? resultsData[\"season\"][`${pick.id}`].includes(\n                          pick.queenID\n                        )\n                        ? \"leagueDetails__rosterIMG2\"\n                        : \"leagueDetails__rosterIMG\"\n                      : \"leagueDetails__rosterIMG\"\n                    : \"leagueDetails__rosterIMG\"\n                }\n                src={pick.queenIMG}\n              ></img>\n              <p>{pick.queenName}</p>\n              <p className=\"pointsBadge\">\n                {resultsData[`${seasonPicks[0].category}`]\n                  ? resultsData[`${seasonPicks[0].category}`][`${pick.id}`]\n                    ? resultsData[\"season\"][`${pick.id}`].includes(pick.queenID)\n                      ? pick.pointValue\n                      : 0\n                    : \"?\"\n                  : \"?\"}\n              </p>\n            </Grid>\n          ));\n        } else {\n          if (resultsData) {\n            if (resultsData[`episode1`]) {\n              if (\n                resultsData[`episode1`][\"airDate\"][\"seconds\"] <\n                new Date().getTime()\n              ) {\n                return (\n                  <p>\n                    Sorry this season has already begun. You may no longer make\n                    season selections\n                  </p>\n                );\n              } else {\n                return (\n                  <div className=\"episodePaginationNoResultBox\">\n                    <div>\n                      <AddCircleOutlineRoundedIcon />\n                    </div>\n                    <Link to={`/leagues/${params.id}/selectseasonroster/`}>\n                      &ensp; Select Roster for Season\n                    </Link>\n                  </div>\n                );\n              }\n            } else {\n              return (\n                <div className=\"episodePaginationNoResultBox\">\n                  <div>\n                    <AddCircleOutlineRoundedIcon />\n                  </div>\n                  <Link to={`/leagues/${params.id}/selectseasonroster/`}>\n                    &ensp; Select Roster for Episode\n                  </Link>\n                </div>\n              );\n            }\n          } else {\n            return (\n              <div className=\"episodePaginationNoResultBox\">\n                <div>\n                  <AddCircleOutlineRoundedIcon />\n                </div>\n                <Link to={`/leagues/${params.id}/selectseasonroster/`}>\n                  &ensp; Select Roster for Season\n                </Link>\n              </div>\n            );\n          }\n        }\n      } else {\n        if (resultsData) {\n          if (resultsData[`episode1`]) {\n            if (\n              resultsData[`episode1`][\"airDate\"][\"seconds\"] <\n              new Date().getTime()\n            ) {\n              return (\n                <p>\n                  Sorry this season has already begun. You may no longer make\n                  season selections\n                </p>\n              );\n            } else {\n              return (\n                <div className=\"episodePaginationNoResultBox\">\n                  <div>\n                    <AddCircleOutlineRoundedIcon />\n                  </div>\n                  <Link to={`/leagues/${params.id}/selectseasonroster/`}>\n                    &ensp; Select Roster for Season\n                  </Link>\n                </div>\n              );\n            }\n          } else {\n            return (\n              <div className=\"episodePaginationNoResultBox\">\n                <div>\n                  <AddCircleOutlineRoundedIcon />\n                </div>\n                <Link to={`/leagues/${params.id}/selectseasonroster/`}>\n                  &ensp; Select Roster for Season\n                </Link>\n              </div>\n            );\n          }\n        } else {\n          return (\n            <div className=\"episodePaginationNoResultBox\">\n              <div>\n                <AddCircleOutlineRoundedIcon />\n              </div>\n              <Link to={`/leagues/${params.id}/selectseasonroster/`}>\n                &ensp; Select Roster for Season\n              </Link>\n            </div>\n          );\n        }\n      }\n    }\n  }\n\n  // CALCULATES SCORES, SORTS THEM, AND RENDERS THEM ON PAGE\n  function renderScores() {\n    let scores = [];\n    let episodeSum, totalSum;\n\n    pickData.map((user) => {\n      totalSum = 0;\n      if (user.picks) {\n        user.picks.map((scoreEvent) => {\n          scoreEvent.picks.map((pick) => {\n            if (resultsData[`${scoreEvent.category}`]) {\n              if (resultsData[`${scoreEvent.category}`][`${pick.id}`]) {\n                if (\n                  resultsData[`${scoreEvent.category}`][`${pick.id}`].includes(\n                    pick.queenID\n                  )\n                ) {\n                  totalSum += pick.pointValue;\n                }\n              } else {\n              }\n            }\n          });\n        });\n      }\n      scores.push({\n        userID: user.userID,\n        username: user.username,\n        score: totalSum,\n      });\n    });\n\n    if (scores) {\n      return (\n        <TableContainer>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>#</TableCell>\n                <TableCell>NAME</TableCell>\n                <TableCell align=\"right\">SCORE</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {scores\n                .sort((a, b) => (a.score < b.score ? 1 : -1))\n                .map((row, index) => (\n                  <TableRow key={row.userID}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {index + 1}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.username}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Typography variant=\"h5\">{row.score}</Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      );\n    } else {\n      return <p>LOADING</p>;\n    }\n  }\n\n  return (\n    <div className=\"leagueDetails__wrapper\">\n      {/* TODO: redirect or show 404 if there is no league */}\n      <div className=\"leagueDetails__header\">\n        <h1>{leagueData.leagueName}</h1>\n\n        {/* <h1>{currTime}</h1> */}\n        <p>RuPaul's Drag Race, Season 13</p>\n        <p>LEAGUE CODE: {params.id}</p>\n      </div>\n\n      <div className=\"leagueDetails__dashboard\">\n        {/* dashboard */}\n        <Grid container container align=\"center\" justify=\"center\">\n          <Grid item xs={12} md={3}>\n            <div className=\"leagueDetails__leaderboard\">\n              <Grid item xs={12} md={12}>\n                <Typography align=\"center\" variant=\"h4\">\n                  LEADERBOARD\n                </Typography>\n                {renderScores()}\n              </Grid>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <div className=\"leagueDetails__leaderboard\">\n              <Typography align=\"center\" variant=\"h5\">\n                SEASON PICKS\n              </Typography>\n              <Grid container align=\"center\" justify=\"center\">\n                {renderSeasonPicks()}\n              </Grid>\n            </div>\n            <br></br>\n            <div className=\"leagueDetails__leaderboard\">\n              <Grid item xs={12} md={12}>\n                <div>\n                  <Typography align=\"center\" variant=\"h5\">\n                    EPISODE PICKS\n                  </Typography>\n                  <Pagination\n                    className=\"episodePagination\"\n                    page={page}\n                    onChange={handlePageChange}\n                    count={12}\n                    defaultPage={1}\n                    boundaryCount={1}\n                    color=\"primary\"\n                  />\n                  <Typography align=\"center\" variant=\"p\">\n                    EPISODE AIR DATE:\n                  </Typography>\n                  <p>\n                    {resultsData\n                      ? resultsData[`episode${page}`]\n                        ? new Date(\n                            resultsData[`episode${page}`][\"airDate\"][\n                              \"seconds\"\n                            ] * 1000\n                          ).toLocaleDateString(\"en-us\")\n                        : \"NO INFO ON AIR DATE YET\"\n                      : \"NO INFO ON AIR DATE YET\"}\n                  </p>\n\n                  {/* <p>\n                    {resultsData\n                      ? resultsData[`episode${page}`]\n                        ? resultsData[`episode${page}`][\"airDate\"][\"seconds\"] <\n                          new Date().getTime()\n                          ? \"LESS\"\n                          : \"GREATER\"\n                        : \"NO INFO ON AIR DATE YET\"\n                      : \"NO INFO ON AIR DATE YET\"}\n                  </p> */}\n                  <Grid container container align=\"center\" justify=\"center\">\n                    {renderEpisodePicks(page)}\n                  </Grid>\n                </div>\n              </Grid>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default LeagueDetails;\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectSeasonRoster\\SelectSeasonRoster.js",["152","153","154","155","156","157","158","159","160","161","162"],"import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\r\nimport \"./SelectSeasonRoster.css\";\r\nimport { db, storage } from \"../../firebase.js\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport QueenSelect from \"../../components/QueenSelect/QueenSelect\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EPISODE_NUM = \"season\";\r\n\r\nfunction SelectSeasonRoster() {\r\n  const classes = useStyles();\r\n  const [queens, setQueens] = React.useState([]);\r\n  const [seasonPicks, setSeasonPicks] = React.useState({});\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  let params = useParams();\r\n\r\n  useEffect(() => {\r\n    const queensArr = [];\r\n    db.collection(\"shows\")\r\n      .doc(\"RPDR\")\r\n      .collection(\"seasons\")\r\n      .doc(\"US_Reg_13\")\r\n      .collection(\"queens\")\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          queensArr.push(doc.data());\r\n          console.log(\"queens\", queens);\r\n          console.log(\"queensArr\", queensArr);\r\n        });\r\n        setQueens(queensArr);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (pointValue, pointCategory, event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setSeasonPicks({\r\n      ...seasonPicks,\r\n      [name]: { ...value, id: name, pointValue, pointCategory },\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // TODO: If current user isnt member of league, do not submit\r\n    // if (signUpFormState.password !== signUpFormState.passwordConfirm) {\r\n    //   return setError(\"Passwords do not match\");\r\n    // }\r\n\r\n    const submittedArr = {\r\n      category: `season`,\r\n      picks: Object.values(seasonPicks),\r\n    };\r\n    console.log(\"SUBMITTING: \", submittedArr);\r\n\r\n    // try {\r\n    console.log(\"STEP 1\");\r\n    setError(\"\");\r\n    setLoading(true);\r\n    db.collection(`leagues`)\r\n      .doc(params.id)\r\n      .collection(\"picks\")\r\n      .where(\"userID\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          db.collection(\"leagues\")\r\n            .doc(params.id)\r\n            .collection(\"picks\")\r\n            .doc(doc.id)\r\n            .update({\r\n              picks: firebase.firestore.FieldValue.arrayUnion(submittedArr),\r\n            });\r\n          console.log(\"Success \", doc.id, \" => \", doc.data());\r\n          console.log(\"STEP 2\");\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        setError(\"Error writing document: \", error);\r\n        console.log(\"ERROR \", error);\r\n      });\r\n\r\n    history.push(`/leagues/${params.id}`);\r\n    setLoading(false);\r\n    console.log(\"STEP 3\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Season Roster</h1>\r\n      <p>\r\n        These are your picks for this season. Once you lock these in, you cannot\r\n        change them for the remainder of the season.\r\n      </p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Season Winner Select */}\r\n        <QueenSelect\r\n          queensArr={queens}\r\n          handleChange={(event) => handleChange(50, \"Season Winner\", event)}\r\n          currPickValue={seasonPicks.seasonWinner}\r\n          pointCategory=\"Season Winner\"\r\n          pointCategoryId=\"seasonWinner\"\r\n          pointValue=\"50\"\r\n          pointCategoryDescription=\"This is the winner of the season. If there is more than one winner,\r\n          points will be assigned if you have selected one of the winners.\"\r\n        />\r\n\r\n        {/* Miss Congeniality */}\r\n        <QueenSelect\r\n          queensArr={queens}\r\n          handleChange={(event) => handleChange(50, \"Miss Congeniality\", event)}\r\n          currPickValue={seasonPicks.missCongeniality}\r\n          pointCategory=\"Miss Congeniality\"\r\n          pointCategoryId=\"missCongeniality\"\r\n          pointValue=\"50\"\r\n          pointCategoryDescription=\"Miss Congeniality award goes to the Fan Favorite of the season on\r\n          the final episode.\"\r\n        />\r\n\r\n        {/* Miss Congeniality */}\r\n        <QueenSelect\r\n          queensArr={queens}\r\n          handleChange={(event) => handleChange(50, \"First Eliminated\", event)}\r\n          currPickValue={seasonPicks.firstEliminated}\r\n          pointCategory=\"First Eliminated\"\r\n          pointCategoryId=\"firstEliminated\"\r\n          pointValue=\"50\"\r\n          pointCategoryDescription=\"Select who you think will be the first eliminated. You will get points if you guess this correctly. If there is no elimination on episode one, points will be assigned when the first queen is eliminated.\"\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Submit Season Picks\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectSeasonRoster;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectEpisodeRoster\\SelectEpisodeRoster.js",["163","164","165","166","167","168","169","170","171","172","173"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\nimport \"./SelectEpisodeRoster.css\";\nimport { db, storage } from \"../../firebase.js\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport QueenSelect from \"../../components/QueenSelect/QueenSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 400,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst EPISODE_NUM = 1;\n\nfunction SelectEpisodeRoster() {\n  const classes = useStyles();\n  const [queens, setQueens] = React.useState([]);\n  const [episodePicks, setEpisodePicks] = React.useState({});\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const { currentUser } = useAuth();\n  let params = useParams();\n\n  useEffect(() => {\n    const queensArr = [];\n    db.collection(\"shows\")\n      .doc(\"RPDR\")\n      .collection(\"seasons\")\n      .doc(\"US_Reg_13\")\n      .collection(\"queens\")\n      .get()\n      .then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          queensArr.push(doc.data());\n          console.log(\"queens\", queens);\n          console.log(\"queensArr\", queensArr);\n        });\n        setQueens(queensArr);\n      });\n  }, []);\n\n  const handleChange = (pointValue, pointCategory, event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setEpisodePicks({\n      ...episodePicks,\n      [name]: { ...value, id: name, pointValue, pointCategory },\n    });\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // TODO: If current user isnt member of league, do not submit\n    // if (signUpFormState.password !== signUpFormState.passwordConfirm) {\n    //   return setError(\"Passwords do not match\");\n    // }\n\n    const submittedArr = {\n      category: `episode${params.episodeNum}`,\n      picks: Object.values(episodePicks),\n    };\n    console.log(\"SUBMITTING: \", submittedArr);\n\n    // try {\n    console.log(\"STEP 1\");\n    setError(\"\");\n    setLoading(true);\n    db.collection(`leagues`)\n      .doc(params.id)\n      .collection(\"picks\")\n      .where(\"userID\", \"==\", currentUser.uid)\n      .get()\n      .then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          db.collection(\"leagues\")\n            .doc(params.id)\n            .collection(\"picks\")\n            .doc(doc.id)\n            .update({\n              picks: firebase.firestore.FieldValue.arrayUnion(submittedArr),\n            });\n          console.log(\"Success \", doc.id, \" => \", doc.data());\n          console.log(\"STEP 2\");\n        });\n      })\n      .catch(function (error) {\n        setError(\"Error writing document: \", error);\n        console.log(\"ERROR \", error);\n      });\n\n    history.push(`/leagues/${params.id}`);\n    setLoading(false);\n    console.log(\"STEP 3\");\n  }\n\n  return (\n    <div>\n      <h1>Select Episode Roster</h1>\n      <p>\n        These are your picks for this episode. Once you lock these in, you\n        cannot change them for the remainder of the season.\n      </p>\n\n      <form onSubmit={handleSubmit}>\n        {/* Episode Winner Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(20, \"Episode Winner\", event)}\n          currPickValue={episodePicks.episodeWinner}\n          pointCategory=\"Episode Winner\"\n          pointCategoryId=\"episodeWinner\"\n          pointValue=\"20\"\n          pointCategoryDescription=\"This is the winner of the episode. If there is more than one winner,\n        points will be assigned if you have selected one of the winners.\"\n        />\n\n        {/* Maxi Challenge Winner Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) =>\n            handleChange(10, \"Maxi Challenge Winner\", event)\n          }\n          currPickValue={episodePicks.maxiChallengeWinner}\n          pointCategory=\"Maxi Challenge Winner\"\n          pointCategoryId=\"maxiChallengeWinner\"\n          pointValue=\"10\"\n          pointCategoryDescription=\"This is the winner of the main challenge of the episode. If there is\n          more than one winner, points will be awarded if you have selected\n          one of the winners.\"\n        />\n\n        {/* Mini Challenge Winner Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) =>\n            handleChange(10, \"Mini Challenge Winner\", event)\n          }\n          currPickValue={episodePicks.miniChallengeWinner}\n          pointCategory=\"Mini Challenge Winner\"\n          pointCategoryId=\"miniChallengeWinner\"\n          pointValue=\"10\"\n          pointCategoryDescription=\"This is the winner of the main challenge of the episode. If there is\n          more than one winner, points will be awarded if you have selected\n          one of the winners.\"\n        />\n\n        {/* Top #1 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Top Queen #1\", event)}\n          currPickValue={episodePicks.topQueen1}\n          pointCategory=\"Top Queen #1\"\n          pointCategoryId=\"topQueen1\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"This is the top two queens of the week (in no particular order). If\n          there is a number of queens in the top other than 2, you will\n          receive points for each queen you have that is in the top.\"\n        />\n\n        {/* Top #2 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Top Queen #2\", event)}\n          currPickValue={episodePicks.topQueen2}\n          pointCategory=\"Top Queen #2\"\n          pointCategoryId=\"topQueen2\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"\"\n        />\n\n        {/* Bottom #1 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Bottom Queen #1\", event)}\n          currPickValue={episodePicks.bottomQueen1}\n          pointCategory=\"Bottom Queen #1\"\n          pointCategoryId=\"bottomQueen1\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"This is the bottom two queens of the week (in no particular order).\n          If there is a number of queens in the bottom other than 2, you will\n          receive points for each queen you have that is in the bottom.\"\n        />\n\n        {/* Bottom #2 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Bottom Queen #2\", event)}\n          currPickValue={episodePicks.bottomQueen2}\n          pointCategory=\"Bottom Queen #2\"\n          pointCategoryId=\"bottomQueen2\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"\"\n        />\n\n        {/* Eliminated Queen Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(10, \"Eliminated Queen\", event)}\n          currPickValue={episodePicks.eliminated}\n          pointCategory=\"Eliminated Queen\"\n          pointCategoryId=\"eliminated\"\n          pointValue=\"10\"\n          pointCategoryDescription=\"This is the queen that you think will get eliminated this episode.\n          If there is more than one queens eliminated, points will be awarded\n          if you have selected one of the winners. If double shantay, no\n          points will be awarded.\"\n        />\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit Episode Picks\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default SelectEpisodeRoster;\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeJumbotron\\HomeJumbotron.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeInstructions\\HomeInstructions.js",["174"],"import React from \"react\";\r\nimport { Grid, Hidden, Typography } from \"@material-ui/core\";\r\nimport \"./HomeInstructions.css\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport BallotIcon from \"@material-ui/icons/Ballot\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\n\r\nfunction HomeInstructions() {\r\n  return (\r\n    <section className=\"HomeInstructions__Section\">\r\n      <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n        HOW DOES DERBY WORK?\r\n      </Typography>\r\n      <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"center\">\r\n        It's simple, really! All you have to do is Create, Choose, and Compete!\r\n      </Typography>\r\n      <div>\r\n        <Grid container spacing={6} justify=\"center\" alignItems=\"flex=start\">\r\n          <Grid item xs={12} md={4} align=\"center\">\r\n            <AddBoxIcon className=\"HomeInstructions__Icon\"></AddBoxIcon>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n              1. Create a League\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"left\">\r\n              Start off by creating or joining a league. This creates a space\r\n              within a TV show for you and your friends to keep track of your\r\n              points!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={4} align=\"center\">\r\n            <BallotIcon className=\"HomeInstructions__Icon\"></BallotIcon>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n              2. Choose Your Roster\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"left\">\r\n              To earn points, you will select rosters of your favorite reality\r\n              tv show contestants. Each week, you will earn points based on how\r\n              your selected contestants perform!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={4} align=\"center\">\r\n            <SupervisedUserCircleIcon className=\"HomeInstructions__Icon\"></SupervisedUserCircleIcon>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n              3. Compete with Friends\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"left\">\r\n              And that's it! You're ready to compete against your friends!\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HomeInstructions;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\queenSelect\\queenSelect.js",["175","176","177","178","179"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\QueenSelect\\QueenSelect.js",["180"],"import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport \"./QueenSelect.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    minWidth: 400,\r\n    \"& .MuiPaper-root\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"& .MuiMenu-list\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n    formControl: {\r\n      minWidth: 400,\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction QueenSelect(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {/* Episode Winner Select */}\r\n      <div>\r\n        <h2>{props.pointCategory}</h2>\r\n        <h3>{props.pointValue} Points</h3>\r\n        <p>{props.pointCategoryDescription}</p>\r\n\r\n        <div>\r\n          <FormControl className={classes.root}>\r\n            <InputLabel id=\"demo-simple-select-label\">\r\n              {props.pointCategory}\r\n            </InputLabel>\r\n            <Select\r\n              labelId={props.pointCategoryId}\r\n              id={props.pointCategoryId}\r\n              name={props.pointCategoryId}\r\n              value={props.currPickValue}\r\n              onChange={props.handleChange}\r\n            >\r\n              {props.queensArr.map((queen) => (\r\n                <div value={queen} key={queen.queenName}>\r\n                  <MenuItem className={classes.root}>\r\n                    <img\r\n                      className=\"SelectEpisodeRoster__selectImg\"\r\n                      src={queen.queenIMG}\r\n                      alt={`image of ${queen.queenName}`}\r\n                    ></img>\r\n                    <p className=\"SelectEpisodeRoster__selectName\">\r\n                      {queen.queenName}\r\n                    </p>\r\n                  </MenuItem>\r\n                </div>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueenSelect;\r\n",{"ruleId":"181","severity":1,"message":"182","line":8,"column":3,"nodeType":"183","messageId":"184","endLine":8,"endColumn":9},{"ruleId":"181","severity":1,"message":"185","line":9,"column":3,"nodeType":"183","messageId":"184","endLine":9,"endColumn":8},{"ruleId":"181","severity":1,"message":"186","line":10,"column":3,"nodeType":"183","messageId":"184","endLine":10,"endColumn":7},{"ruleId":"181","severity":1,"message":"187","line":11,"column":3,"nodeType":"183","messageId":"184","endLine":11,"endColumn":14},{"ruleId":"181","severity":1,"message":"188","line":4,"column":20,"nodeType":"183","messageId":"184","endLine":4,"endColumn":26},{"ruleId":"181","severity":1,"message":"186","line":7,"column":3,"nodeType":"183","messageId":"184","endLine":7,"endColumn":7},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"181","severity":1,"message":"193","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"188","line":2,"column":27,"nodeType":"183","messageId":"184","endLine":2,"endColumn":33},{"ruleId":"181","severity":1,"message":"182","line":2,"column":35,"nodeType":"183","messageId":"184","endLine":2,"endColumn":41},{"ruleId":"181","severity":1,"message":"185","line":2,"column":43,"nodeType":"183","messageId":"184","endLine":2,"endColumn":48},{"ruleId":"181","severity":1,"message":"194","line":13,"column":10,"nodeType":"183","messageId":"184","endLine":13,"endColumn":15},{"ruleId":"181","severity":1,"message":"195","line":7,"column":15,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":22,"column":6,"nodeType":"198","endLine":22,"endColumn":8,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":16,"column":11,"nodeType":"202","endLine":16,"endColumn":61},{"ruleId":"181","severity":1,"message":"203","line":13,"column":7,"nodeType":"183","messageId":"184","endLine":13,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":16,"column":9,"nodeType":"202","endLine":16,"endColumn":68},{"ruleId":"181","severity":1,"message":"204","line":15,"column":10,"nodeType":"183","messageId":"184","endLine":15,"endColumn":19},{"ruleId":"181","severity":1,"message":"205","line":74,"column":11,"nodeType":"183","messageId":"184","endLine":74,"endColumn":17},{"ruleId":"181","severity":1,"message":"206","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":23},{"ruleId":"181","severity":1,"message":"204","line":16,"column":10,"nodeType":"183","messageId":"184","endLine":16,"endColumn":19},{"ruleId":"181","severity":1,"message":"206","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":23},{"ruleId":"181","severity":1,"message":"207","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"208","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":24},{"ruleId":"181","severity":1,"message":"209","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":16},{"ruleId":"181","severity":1,"message":"210","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":11},{"ruleId":"181","severity":1,"message":"211","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":24},{"ruleId":"181","severity":1,"message":"204","line":19,"column":10,"nodeType":"183","messageId":"184","endLine":19,"endColumn":19},{"ruleId":"181","severity":1,"message":"212","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"181","severity":1,"message":"213","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":21},{"ruleId":"181","severity":1,"message":"214","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":13},{"ruleId":"181","severity":1,"message":"215","line":16,"column":10,"nodeType":"183","messageId":"184","endLine":16,"endColumn":19},{"ruleId":"181","severity":1,"message":"216","line":18,"column":8,"nodeType":"183","messageId":"184","endLine":18,"endColumn":16},{"ruleId":"181","severity":1,"message":"217","line":31,"column":9,"nodeType":"183","messageId":"184","endLine":31,"endColumn":16},{"ruleId":"181","severity":1,"message":"218","line":38,"column":10,"nodeType":"183","messageId":"184","endLine":38,"endColumn":18},{"ruleId":"181","severity":1,"message":"219","line":38,"column":20,"nodeType":"183","messageId":"184","endLine":38,"endColumn":31},{"ruleId":"196","severity":1,"message":"220","line":62,"column":6,"nodeType":"198","endLine":62,"endColumn":8,"suggestions":"221"},{"ruleId":"196","severity":1,"message":"220","line":81,"column":6,"nodeType":"198","endLine":81,"endColumn":8,"suggestions":"222"},{"ruleId":"200","severity":1,"message":"201","line":130,"column":25,"nodeType":"202","endLine":145,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":313,"column":15,"nodeType":"202","endLine":326,"endColumn":16},{"ruleId":"181","severity":1,"message":"223","line":445,"column":9,"nodeType":"183","messageId":"184","endLine":445,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":447,"column":25,"nodeType":"226","messageId":"227","endLine":447,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":450,"column":37,"nodeType":"226","messageId":"227","endLine":450,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":451,"column":39,"nodeType":"226","messageId":"227","endLine":451,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":523,"column":25,"nodeType":"230","endLine":523,"endColumn":34},{"ruleId":"228","severity":1,"message":"229","line":584,"column":35,"nodeType":"230","endLine":584,"endColumn":44},{"ruleId":"181","severity":1,"message":"231","line":3,"column":3,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"232","line":4,"column":3,"nodeType":"183","messageId":"184","endLine":4,"endColumn":13},{"ruleId":"181","severity":1,"message":"233","line":5,"column":3,"nodeType":"183","messageId":"184","endLine":5,"endColumn":11},{"ruleId":"181","severity":1,"message":"234","line":6,"column":3,"nodeType":"183","messageId":"184","endLine":6,"endColumn":9},{"ruleId":"181","severity":1,"message":"235","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":17},{"ruleId":"181","severity":1,"message":"236","line":12,"column":14,"nodeType":"183","messageId":"184","endLine":12,"endColumn":21},{"ruleId":"181","severity":1,"message":"237","line":29,"column":7,"nodeType":"183","messageId":"184","endLine":29,"endColumn":18},{"ruleId":"181","severity":1,"message":"217","line":32,"column":9,"nodeType":"183","messageId":"184","endLine":32,"endColumn":16},{"ruleId":"181","severity":1,"message":"194","line":36,"column":10,"nodeType":"183","messageId":"184","endLine":36,"endColumn":15},{"ruleId":"181","severity":1,"message":"238","line":37,"column":10,"nodeType":"183","messageId":"184","endLine":37,"endColumn":17},{"ruleId":"196","severity":1,"message":"239","line":58,"column":6,"nodeType":"198","endLine":58,"endColumn":8,"suggestions":"240"},{"ruleId":"181","severity":1,"message":"231","line":3,"column":3,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"232","line":4,"column":3,"nodeType":"183","messageId":"184","endLine":4,"endColumn":13},{"ruleId":"181","severity":1,"message":"233","line":5,"column":3,"nodeType":"183","messageId":"184","endLine":5,"endColumn":11},{"ruleId":"181","severity":1,"message":"234","line":6,"column":3,"nodeType":"183","messageId":"184","endLine":6,"endColumn":9},{"ruleId":"181","severity":1,"message":"235","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":17},{"ruleId":"181","severity":1,"message":"236","line":12,"column":14,"nodeType":"183","messageId":"184","endLine":12,"endColumn":21},{"ruleId":"181","severity":1,"message":"237","line":29,"column":7,"nodeType":"183","messageId":"184","endLine":29,"endColumn":18},{"ruleId":"181","severity":1,"message":"217","line":32,"column":9,"nodeType":"183","messageId":"184","endLine":32,"endColumn":16},{"ruleId":"181","severity":1,"message":"194","line":36,"column":10,"nodeType":"183","messageId":"184","endLine":36,"endColumn":15},{"ruleId":"181","severity":1,"message":"238","line":37,"column":10,"nodeType":"183","messageId":"184","endLine":37,"endColumn":17},{"ruleId":"196","severity":1,"message":"239","line":58,"column":6,"nodeType":"198","endLine":58,"endColumn":8,"suggestions":"241"},{"ruleId":"181","severity":1,"message":"242","line":2,"column":16,"nodeType":"183","messageId":"184","endLine":2,"endColumn":22},{"ruleId":"181","severity":1,"message":"231","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":21},{"ruleId":"181","severity":1,"message":"232","line":1,"column":23,"nodeType":"183","messageId":"184","endLine":1,"endColumn":33},{"ruleId":"181","severity":1,"message":"233","line":1,"column":35,"nodeType":"183","messageId":"184","endLine":1,"endColumn":43},{"ruleId":"181","severity":1,"message":"234","line":1,"column":45,"nodeType":"183","messageId":"184","endLine":1,"endColumn":51},{"ruleId":"181","severity":1,"message":"243","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":48,"column":21,"nodeType":"202","endLine":52,"endColumn":22},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'Router' is defined but never used.","no-native-reassign",["246"],"no-negated-in-lhs",["247"],"'useEffect' is defined but never used.","'error' is assigned a value but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["248"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'params' is assigned a value but never used.","'Copyright' is defined but never used.","'signup' is assigned a value but never used.","'useRef' is defined but never used.","'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Jumbotron' is defined but never used.","'leaguePageBkg' is defined but never used.","'Paper' is defined but never used.","'Container' is defined but never used.","'firebase' is defined but never used.","'classes' is assigned a value but never used.","'currTime' is assigned a value but never used.","'setCurrTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["249"],["250"],"'episodeSum' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'s13Poster' is defined but never used.","'storage' is defined but never used.","'EPISODE_NUM' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queens'. Either include it or remove the dependency array.",["251"],["252"],"'Hidden' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"255","fix":"257"},{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},"Update the dependencies array to be: [currentUser.uid]",{"range":"261","text":"262"},"Update the dependencies array to be: [params.id]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [queens]",{"range":"266","text":"267"},{"range":"268","text":"267"},[905,907],"[currentUser.uid]",[2220,2222],"[params.id]",[2747,2749],[1688,1690],"[queens]",[1628,1630]]