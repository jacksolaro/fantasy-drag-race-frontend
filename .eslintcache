[{"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\index.js":"1","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\App.js":"2","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Leagues\\Leagues.js":"5","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Footer\\Footer.js":"6","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Home\\Home.js":"7","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Jumbotron\\Jumbotron.js":"8","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\JoinLeague\\JoinLeague.js":"9","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\CreateLeague\\CreateLeague.js":"10","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ShowCard\\ShowCard.js":"11","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SignUp\\SignUp.js":"12","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\contexts\\AuthContext.js":"13","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\firebase.js":"14","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Login\\Login.js":"15","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ForgotPassword\\ForgotPassword.js":"16","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\LeagueDetails\\LeagueDetails.js":"17","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectSeasonRoster\\SelectSeasonRoster.js":"18","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectEpisodeRoster\\SelectEpisodeRoster.js":"19","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeJumbotron\\HomeJumbotron.js":"20","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeInstructions\\HomeInstructions.js":"21","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\queenSelect\\queenSelect.js":"22","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\QueenSelect\\QueenSelect.js":"23"},{"size":634,"mtime":1610503657888,"results":"24","hashOfConfig":"25"},{"size":4130,"mtime":1611090925864,"results":"26","hashOfConfig":"25"},{"size":377,"mtime":1606862747486,"results":"27","hashOfConfig":"25"},{"size":3798,"mtime":1610747310847,"results":"28","hashOfConfig":"25"},{"size":5148,"mtime":1610595143700,"results":"29","hashOfConfig":"25"},{"size":2293,"mtime":1611091650705,"results":"30","hashOfConfig":"25"},{"size":2236,"mtime":1611091179256,"results":"31","hashOfConfig":"25"},{"size":712,"mtime":1610567455690,"results":"32","hashOfConfig":"25"},{"size":2959,"mtime":1610581745165,"results":"33","hashOfConfig":"25"},{"size":4700,"mtime":1610595080728,"results":"34","hashOfConfig":"25"},{"size":4202,"mtime":1610597074040,"results":"35","hashOfConfig":"25"},{"size":6358,"mtime":1610560259570,"results":"36","hashOfConfig":"25"},{"size":1746,"mtime":1609263754184,"results":"37","hashOfConfig":"25"},{"size":815,"mtime":1609264089055,"results":"38","hashOfConfig":"25"},{"size":5023,"mtime":1610560329988,"results":"39","hashOfConfig":"25"},{"size":5418,"mtime":1610511358255,"results":"40","hashOfConfig":"25"},{"size":16375,"mtime":1610686252249,"results":"41","hashOfConfig":"25"},{"size":5818,"mtime":1610656460429,"results":"42","hashOfConfig":"25"},{"size":8751,"mtime":1610656556254,"results":"43","hashOfConfig":"25"},{"size":1101,"mtime":1610567265626,"results":"44","hashOfConfig":"25"},{"size":2927,"mtime":1610567219018,"results":"45","hashOfConfig":"25"},{"size":2693,"mtime":1610581550544,"results":"46","hashOfConfig":"25"},{"size":2693,"mtime":1610581550544,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mhqtdp",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"57"},"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\index.js",["106","107","108","109"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\App.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Nav\\Nav.js",["110","111","112","113","114"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\nimport derbyLogo from \"../../assets/images/derby_logo_white-01.png\";\r\n\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Nav(props) {\r\n  const { logout } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  // Open / Close Drawer for Mobile Nav\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (typeof event === \"undefined\") {\r\n      return;\r\n    }\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  // Handle Log Out\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n      history.push(`/login`);\r\n    } catch {\r\n      setError(\"Failed to log out\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"\">\r\n      <div className={`nav`}>\r\n        <Link className=\"nav-logo\" to=\"/\">\r\n          <img src={derbyLogo} alt=\"Derby Logo\" className=\"nav-logo\"></img>\r\n        </Link>\r\n\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={isExpanded}\r\n          onOpen={toggleDrawer(\"right\", true)}\r\n          onClose={toggleDrawer(\"right\", false)}\r\n        >\r\n          <div className=\"drawer\">\r\n            <ul className=\"drawer__list\">\r\n              {!props.currentUser && (\r\n                <>\r\n                  <Link to=\"/login\">\r\n                    <li className=\"drawer__item\">Log In</li>\r\n                  </Link>\r\n                  <Link to=\"/signup\">\r\n                    <li className=\"drawer__item\">Sign Up</li>\r\n                  </Link>\r\n                </>\r\n              )}\r\n              {props.currentUser && (\r\n                <>\r\n                  <Link className=\"drawer__item\" to=\"/\">\r\n                    Home\r\n                  </Link>\r\n\r\n                  <Link className=\"drawer__item\" to=\"/leagues\">\r\n                    Leagues\r\n                  </Link>\r\n\r\n                  <Link className=\"drawer__item\" to=\"/\" onClick={handleLogout}>\r\n                    Log Out\r\n                  </Link>\r\n                </>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </Drawer>\r\n\r\n        <ul>\r\n          {!props.currentUser && (\r\n            <>\r\n              <Link className=\"nav-link\" to=\"/login\">\r\n                <li className=\"nav-item button__logout\">Log In</li>\r\n              </Link>\r\n              <Link className=\"nav-link\" to=\"/signup\">\r\n                <li className=\"nav-item button__logout\">Sign Up</li>\r\n              </Link>\r\n            </>\r\n          )}\r\n          {props.currentUser && (\r\n            <>\r\n              <Link className=\"nav-link\" to=\"/\" onClick={handleLogout}>\r\n                <li className=\"nav-item button__logout\">Log Out</li>\r\n              </Link>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/leagues\">\r\n                  Leagues\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className=\"nav__hamburger\">\r\n          <MenuIcon\r\n            onClick={toggleDrawer(\"right\", true)}\r\n            style={{ color: \"#FFFFFF\", padding: 10 }}\r\n            fontSize=\"large\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n",["115","116"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Leagues\\Leagues.js",["117"],"import React, { useEffect, useState } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport leaguePageBkg from \"../../assets/images/bkg-3.jpg\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { db } from \"../../firebase.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Button, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport \"./Leagues.css\";\r\nimport AddCircleOutlineRoundedIcon from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport GroupTwoToneIcon from \"@material-ui/icons/GroupTwoTone\";\r\n\r\nfunction Leagues() {\r\n  const { currentUser } = useAuth();\r\n  const [leagues, setLeagues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"leagues\")\r\n      .where(\"members\", \"array-contains\", currentUser.uid)\r\n      .onSnapshot((snapshot) => {\r\n        setLeagues(snapshot.docs.map((doc) => doc));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Leagues__Wrapper\">\r\n      <Jumbotron\r\n        image={leaguePageBkg}\r\n        height=\"300\"\r\n        headline=\"LEAGUES\"\r\n      ></Jumbotron>\r\n      <Container>\r\n        <h1>YOUR LEAGUES</h1>\r\n\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={6} align=\"left\">\r\n            <p>\r\n              Below are the leagues you are a part of! Don't see any leagues? Go\r\n              ahead and create or join one!\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} align=\"right\">\r\n            {/* <TextField\r\n              id=\"joinLeague\"\r\n              label=\"\"\r\n              value=\"Enter League ID\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <Button variant=\"contained\" style={{ color: \"#0099FF\" }}>\r\n                    JOIN\r\n                  </Button>\r\n                ),\r\n              }}\r\n            /> */}\r\n            <Link to=\"/joinLeague\" style={{ textDecoration: \"none\" }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#0099FF\", color: \"white\" }}\r\n              >\r\n                JOIN LEAGUE\r\n              </Button>\r\n            </Link>\r\n\r\n            {/* <div class=\"search\">\r\n              <input type=\"text\" class=\"searchTerm\" placeholder=\"League ID\" />\r\n              <button type=\"submit\" class=\"searchButton\">\r\n                JOIN\r\n              </button>\r\n            </div> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={4} align=\"center\">\r\n            <Link to=\"/createleague\" style={{ textDecoration: \"none\" }}>\r\n              <div\r\n                className=\"Leagues__Card Leagues__CreateLeagueCard\"\r\n                style={{ backgroundColor: \"#0099ff\" }}\r\n              >\r\n                <div>\r\n                  <AddCircleOutlineRoundedIcon\r\n                    className=\"Leagues__Icon\"\r\n                    style={{ fontSize: 100, color: \"white\" }}\r\n                  ></AddCircleOutlineRoundedIcon>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    component=\"h2\"\r\n                    align=\"center\"\r\n                  >\r\n                    <Box fontWeight=\"fontWeightBold\" m={1}>\r\n                      CREATE A LEAGUE\r\n                    </Box>\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </Grid>\r\n          {leagues.map((league, index) => (\r\n            <Grid item xs={12} md={4} align=\"center\" key={index}>\r\n              <Link\r\n                to={`/leagues/${league.id}`}\r\n                style={{ textDecoration: \"none\", color: \"#00497a\" }}\r\n              >\r\n                <div className=\"Leagues__Card\">\r\n                  <div>\r\n                    <GroupTwoToneIcon\r\n                      className=\"Leagues__Icon\"\r\n                      style={{ fontSize: 100 }}\r\n                    ></GroupTwoToneIcon>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h4\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Box fontWeight=\"fontWeightBold\" m={1}>\r\n                        {league.data().leagueName}\r\n                      </Box>\r\n                    </Typography>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h6\"\r\n                      component=\"h6\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Box fontWeight=\"\" m={1}>\r\n                        {league.data().showDetails\r\n                          ? `\r\n            ${league.data().showDetails.showTitle} \r\n           ${league.data().showDetails.showCountry}, Season \r\n           ${league.data().showDetails.showSeasonNum}`\r\n                          : \"LOADING\"}\r\n                      </Box>\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leagues;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Footer\\Footer.js",["118","119","120","121","122","123","124","125"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Home\\Home.js",["126"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Jumbotron\\Jumbotron.js",["127","128"],"import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nfunction Jumbotron(props) {\r\n  const jumbotron__style = {\r\n    // backgroundImage: `url(${props.image})`,\r\n    height: `${props.height}px`,\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron__main\" style={jumbotron__style}>\r\n        <div className=\"jumbotron__content\">\r\n          <h1 className=\"jumbotron__title\">\r\n            <strong>{props.headline}</strong>\r\n          </h1>\r\n          <img className=\"jumbotron__logo\" src={props.logo}></img>\r\n          <p className=\"jumbotron__subtitle\">{props.subtitle}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\JoinLeague\\JoinLeague.js",["129"],"import React from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport joinLeagueBkg from \"../../assets/images/bkg-2.jpg\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { db } from \"../../firebase.js\";\r\nimport firebase from \"firebase/app\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./JoinLeague.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    backgroundColor: \"#0099ff\",\r\n  },\r\n}));\r\n\r\nfunction JoinLeague() {\r\n  const classes = useStyles();\r\n  let params = useParams();\r\n  const { currentUser } = useAuth();\r\n  const [formData, setFormData] = React.useState({\r\n    leagueID: \"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    db.collection(\"leagues\")\r\n      .doc(formData.leagueID)\r\n      .update({\r\n        members: firebase.firestore.FieldValue.arrayUnion(currentUser.uid),\r\n      });\r\n\r\n    db.collection(`leagues`)\r\n      .doc(formData.leagueID)\r\n      .collection(\"picks\")\r\n      .add({\r\n        userID: currentUser.uid,\r\n        username: currentUser.displayName,\r\n      })\r\n      .then(function (docRef) {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function (error) {\r\n        // setError(\"Error writing document: \", error);\r\n        console.log(\"ERROR \", error);\r\n      });\r\n    history.push(`/leagues/`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"JoinLeague__Wrapper\">\r\n      <Jumbotron\r\n        image={joinLeagueBkg}\r\n        height=\"350\"\r\n        headline=\"JOIN A LEAGUE\"\r\n      ></Jumbotron>\r\n      <Container maxWidth=\"md\">\r\n        <h1>Join a League</h1>\r\n        <p>\r\n          Enter the League Code for the league that you would like to join.\r\n          Don't have a league code? Ask a friend to share their league code with\r\n          you, or create a league!\r\n        </p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <TextField\r\n              required\r\n              name=\"leagueID\"\r\n              id=\"leagueID\"\r\n              label=\"League ID\"\r\n              defaultValue=\"\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Join League\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinLeague;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\CreateLeague\\CreateLeague.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ShowCard\\ShowCard.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SignUp\\SignUp.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\firebase.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Login\\Login.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ForgotPassword\\ForgotPassword.js",["130","131","132","133","134","135","136"],"import React, { useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport derbyLogoBlue from \"../../assets/images/derby_logo_blue-01.png\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://firebasestorage.googleapis.com/v0/b/derby-584f8.appspot.com/o/assets%2Fderby_resetpassword_art.png?alt=media&token=cc043ddf-da0c-4af2-8123-0f8848fae290)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 50,\r\n    backgroundColor: \"#0099ff\",\r\n  },\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const [loginFormState, setLoginFormState] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setLoginFormState({\r\n      ...loginFormState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(loginFormState.email);\r\n      setMessage(\"Check your inbox for further instructions\");\r\n    } catch {\r\n      setError(\"Failed to reset password\");\r\n      console.log(loginFormState.email, loginFormState.password);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Link to=\"/\">\r\n            <img\r\n              src={derbyLogoBlue}\r\n              alt=\"derby logo\"\r\n              style={{ width: 400 }}\r\n            ></img>\r\n          </Link>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Password Reset\r\n          </Typography>\r\n          <Typography component=\"h2\" variant=\"h6\">\r\n            Enter your email address below and follow the instructions via email\r\n            to reset your password\r\n          </Typography>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          {message && <Alert severity=\"success\">{message}</Alert>}\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Login?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={loading}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                  Need an account? Sign Up\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\LeagueDetails\\LeagueDetails.js",["137","138","139","140","141","142","143","144","145"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { db } from \"../../firebase.js\";\nimport \"./leagueDetails.css\";\nimport { Pagination } from \"@material-ui/lab\";\nimport AddCircleOutlineRoundedIcon from \"@material-ui/icons/AddCircleOutlineRounded\";\n\nfunction LeagueDetails() {\n  let params = useParams();\n  const { currentUser } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [leagueData, setLeagueData] = useState([{}]);\n  const [resultsData, setResultsData] = useState([{}]);\n  const [pickData, setPickData] = useState([]);\n  const [page, setPage] = React.useState(1);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  // RETRIEVE THE LEAGUE DATA (NAME, MEMBERS, SHOW ID, RESULTS, ETC)\n  useEffect(() => {\n    // setLoading(true);\n    let mounted = true;\n    db.collection(\"leagues\")\n      .doc(params.id)\n      .get()\n      .then((doc) => {\n        console.log(\"LEAGUE DATA\", doc.data());\n        setLeagueData(doc.data());\n        db.collection(\"shows\")\n          .doc(doc.data().showDetails.showID)\n          .get()\n          .then((doc) => {\n            if (mounted) {\n              console.log(\"RESULTS DATA\", doc.data().results);\n              setResultsData(doc.data().results);\n              // setLoading(false);\n            }\n          });\n      })\n      .catch((error) => console.log(\"Error\", error));\n\n    return function cleanup() {\n      mounted = false;\n    };\n  }, []);\n\n  // RETRIEVE ALL PICK DATA FOR USERS IN LEAGUE\n  useEffect(() => {\n    setLoading(true);\n    let mounted = true;\n    let pickDataArr = [];\n    // setPickData([]);\n    // db.collection(\"leagues\")\n    //   .doc(params.id)\n    //   .collection(\"picks\")\n    //   .get()\n    //   .then(function (querySnapshot) {\n    //     if (mounted) {\n    //       querySnapshot.forEach(function (doc) {\n    //         pickDataArr.push(doc.data());\n    //         console.log(\"DOC DATA\", doc.data());\n    //       });\n    //       setPickData(pickDataArr);\n    //       setLoading(false);\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     setPickData([]);\n    //     setLoading(false);\n    //     console.log(\"Error\", error);\n    //   });\n\n    db.collection(\"leagues\")\n      .doc(params.id)\n      .collection(\"picks\")\n      .get()\n      .then((docsArr) => {\n        if (mounted) {\n          console.log(\"DOCS\", docsArr.docs);\n          docsArr.docs.map((doc) => {\n            console.log(\"DOC\", doc.data());\n            pickDataArr.push(doc.data());\n          });\n        }\n        setPickData(pickDataArr);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setPickData([]);\n        setLoading(false);\n        console.log(\"Error\", error);\n      });\n\n    return function cleanup() {\n      mounted = false;\n    };\n  }, []);\n\n  // TAKES ALL THE USERS EPISODE ROSTERS, RENDERS THEM ON PAGE AND DISPLAYS POINTS\n  function renderEpisodePicks(episodeNum) {\n    if (loading) {\n      return <div className=\"episodePaginationNoResultBox\">LOADING</div>;\n    } else {\n      console.log(\"renderEpisodePicksFunction - PickData\", pickData);\n\n      const userData = JSON.parse(JSON.stringify(pickData)).filter(\n        (user) => user.userID === currentUser.uid\n      );\n\n      console.log(\"renderEpisodePicksFunction - UserData\", userData);\n\n      if (userData[0]?.picks !== undefined) {\n        const episodePicks = JSON.parse(\n          JSON.stringify(userData[0].picks)\n        ).filter((list) => list.category === `episode${episodeNum}`);\n        console.log(\"renderEpisodePicksFunction - episodePicks\", episodePicks);\n\n        if (episodePicks[0]?.picks !== undefined) {\n          return (\n            <TableContainer>\n              {/* <p>{resultsData[`episode${episodeNum}`][\"airDate\"]}</p> */}\n              <Table aria-label=\"simple table\" size=\"small\">\n                <TableHead>\n                  <TableRow key=\"episodeHeaders\">\n                    <TableCell>Category</TableCell>\n                    <TableCell>Queen Image</TableCell>\n                    <TableCell>Your Pick</TableCell>\n                    <TableCell>Points Awarded</TableCell>\n                    <TableCell>Points Possible</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {episodePicks[0].picks.map((pick, index) => (\n                    <TableRow key={index}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {pick.pointCategory}\n                      </TableCell>\n                      <TableCell>\n                        <img\n                          className={\n                            resultsData[`${episodePicks[0].category}`]\n                              ? resultsData[`${episodePicks[0].category}`][\n                                  `${pick.id}`\n                                ]\n                                ? resultsData[`${episodePicks[0].category}`][\n                                    `${pick.id}`\n                                  ].includes(pick.queenID)\n                                  ? \"leagueDetails__rosterIMG2\"\n                                  : \"leagueDetails__rosterIMG\"\n                                : \"leagueDetails__rosterIMG\"\n                              : \"leagueDetails__rosterIMG\"\n                          }\n                          src={pick.queenIMG}\n                          alt={`${pick.queenName}`}\n                        ></img>\n                      </TableCell>\n                      <TableCell>{pick.queenName}</TableCell>\n                      <TableCell>\n                        {resultsData[`${episodePicks[0].category}`]\n                          ? resultsData[`${episodePicks[0].category}`][\n                              `${pick.id}`\n                            ]\n                            ? resultsData[`${episodePicks[0].category}`][\n                                `${pick.id}`\n                              ].includes(pick.queenID)\n                              ? pick.pointValue\n                              : 0\n                            : \"?\"\n                          : \"?\"}\n                      </TableCell>\n                      <TableCell>{pick.pointValue}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          );\n        }\n      }\n      // if the season has already started, return notice\n      if (resultsData?.[`episode${page}`]?.airDate?.seconds !== undefined) {\n        if (\n          resultsData[`episode${page}`][\"airDate\"][\"seconds\"] * 1000 <\n          new Date().getTime()\n        ) {\n          return (\n            <p>\n              This episode has passed. You may no longer make selections for\n              this episode.\n            </p>\n          );\n        }\n      }\n\n      return (\n        <div className=\"episodePaginationNoResultBox\">\n          <div>\n            <AddCircleOutlineRoundedIcon />\n          </div>\n          <Link to={`/leagues/${params.id}/selectepisoderoster/${page}`}>\n            &ensp; Select Roster for Episode {page}\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  // TAKES THE USER'S SEASON ROSTER, RENDERS THEM ON PAGE AND DISPLAYS POINTS\n  function renderSeasonPicks() {\n    if (loading) {\n      return <div className=\"episodePaginationNoResultBox\">LOADING</div>;\n    } else {\n      console.log(\"renderEpisodePicksFunction - PickData\", pickData);\n\n      const userData = JSON.parse(JSON.stringify(pickData)).filter(\n        (user) => user.userID === currentUser.uid\n      );\n\n      console.log(\"renderEpisodePicksFunction - UserData\", userData);\n\n      if (userData[0]?.picks !== undefined) {\n        const seasonPicks = JSON.parse(\n          JSON.stringify(userData[0].picks)\n        ).filter((list) => list.category === `season`);\n        console.log(\"renderEpisodePicksFunction - seasonPicks\", seasonPicks);\n\n        if (seasonPicks[0]?.picks !== undefined) {\n          return seasonPicks[0].picks.map((pick) => (\n            <Grid\n              className={\n                resultsData[\"season\"]\n                  ? resultsData[\"season\"][`${pick.id}`].includes(pick.queenID)\n                    ? \"leagueDetails__rosterIMG2\"\n                    : \"leagueDetails__rosterIMG\"\n                  : \"leagueDetails__rosterIMG\"\n              }\n              item\n              xs={12}\n              md={3}\n              key={pick.queenID}\n            >\n              <Typography align=\"center\" variant=\"h6\">\n                {pick.pointCategory}\n              </Typography>\n              <Typography align=\"center\" variant=\"subtitle2\">\n                {pick.pointValue} POINTS POSSIBLE\n              </Typography>\n              <img\n                className={\n                  resultsData[`${seasonPicks[0].category}`]\n                    ? resultsData[`${seasonPicks[0].category}`][`${pick.id}`]\n                      ? resultsData[\"season\"][`${pick.id}`].includes(\n                          pick.queenID\n                        )\n                        ? \"leagueDetails__rosterIMG2\"\n                        : \"leagueDetails__rosterIMG\"\n                      : \"leagueDetails__rosterIMG\"\n                    : \"leagueDetails__rosterIMG\"\n                }\n                src={pick.queenIMG}\n                alt={`${pick.queenName}`}\n              ></img>\n              <p>{pick.queenName}</p>\n              <p className=\"pointsBadge\">\n                {resultsData[`${seasonPicks[0].category}`]\n                  ? resultsData[`${seasonPicks[0].category}`][`${pick.id}`]\n                    ? resultsData[\"season\"][`${pick.id}`].includes(pick.queenID)\n                      ? pick.pointValue\n                      : 0\n                    : \"?\"\n                  : \"?\"}\n              </p>\n            </Grid>\n          ));\n        }\n      }\n\n      // if the season has already started, return notice\n      if (resultsData?.episode1?.airDate?.seconds !== undefined) {\n        if (\n          resultsData[`episode1`][\"airDate\"][\"seconds\"] * 1000 <\n          new Date().getTime()\n        ) {\n          return (\n            <p>\n              Sorry this season has already begun. You may no longer make season\n              selections\n            </p>\n          );\n        }\n      }\n\n      return (\n        <div className=\"episodePaginationNoResultBox\">\n          <div>\n            <AddCircleOutlineRoundedIcon />\n          </div>\n          <Link to={`/leagues/${params.id}/selectseasonroster/`}>\n            &ensp; Select Roster for Season\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  // CALCULATES SCORES, SORTS THEM, AND RENDERS THEM ON PAGE\n  function renderScores() {\n    let scores = [];\n    let episodeSum, totalSum;\n\n    pickData.map((user) => {\n      totalSum = 0;\n      if (user.picks) {\n        user.picks.map((scoreEvent) => {\n          scoreEvent.picks.map((pick) => {\n            if (resultsData[`${scoreEvent.category}`]) {\n              if (resultsData[`${scoreEvent.category}`][`${pick.id}`]) {\n                if (\n                  resultsData[`${scoreEvent.category}`][`${pick.id}`].includes(\n                    pick.queenID\n                  )\n                ) {\n                  totalSum += pick.pointValue;\n                }\n              } else {\n              }\n            }\n          });\n        });\n      }\n      scores.push({\n        userID: user.userID,\n        username: user.username,\n        score: totalSum,\n      });\n    });\n\n    if (scores) {\n      return (\n        <TableContainer>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow key=\"scoreHeaders\">\n                <TableCell>#</TableCell>\n                <TableCell>NAME</TableCell>\n                <TableCell align=\"right\">SCORE</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {scores\n                .sort((a, b) => (a.score < b.score ? 1 : -1))\n                .map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {index + 1}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.username}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Typography variant=\"h5\">{row.score}</Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      );\n    } else {\n      return <p>LOADING</p>;\n    }\n  }\n\n  return (\n    <div className=\"leagueDetails__wrapper\">\n      {/* TODO: redirect or show 404 if there is no league */}\n      <div className=\"leagueDetails__header\">\n        <h1>{leagueData.leagueName}</h1>\n\n        <p>\n          {leagueData.showDetails\n            ? `\n            ${leagueData.showDetails.showTitle} \n           ${leagueData.showDetails.showCountry}, Season \n           ${leagueData.showDetails.showSeasonNum}`\n            : \"LOADING\"}\n        </p>\n        <p>LEAGUE CODE: {params.id}</p>\n      </div>\n\n      <div className=\"leagueDetails__dashboard\">\n        {/* dashboard */}\n        <Grid container container align=\"center\" justify=\"center\">\n          <Grid item xs={12} md={3}>\n            <div className=\"leagueDetails__leaderboard\">\n              <Grid item xs={12} md={12}>\n                <Typography align=\"center\" variant=\"h4\">\n                  LEADERBOARD\n                </Typography>\n                {renderScores()}\n              </Grid>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <div className=\"leagueDetails__leaderboard\">\n              <Typography align=\"center\" variant=\"h5\">\n                SEASON PICKS\n              </Typography>\n              <Grid container align=\"center\" justify=\"center\">\n                {renderSeasonPicks()}\n              </Grid>\n            </div>\n\n            <div className=\"leagueDetails__leaderboard\">\n              <Grid item xs={12} md={12}>\n                <div>\n                  <Typography align=\"center\" variant=\"h5\">\n                    EPISODE PICKS\n                  </Typography>\n                  <Pagination\n                    className=\"episodePagination\"\n                    page={page}\n                    onChange={handlePageChange}\n                    count={12}\n                    defaultPage={1}\n                    boundaryCount={1}\n                    color=\"primary\"\n                  />\n                  <Typography align=\"center\" variant=\"subtitle1\">\n                    EPISODE AIR DATE:\n                  </Typography>\n                  <p>\n                    {resultsData\n                      ? resultsData[`episode${page}`]\n                        ? new Date(\n                            resultsData[`episode${page}`][\"airDate\"][\n                              \"seconds\"\n                            ] * 1000\n                          ).toLocaleDateString(\"en-us\")\n                        : \"NO INFO ON AIR DATE YET\"\n                      : \"NO INFO ON AIR DATE YET\"}\n                  </p>\n\n                  {/* <p>\n                    {resultsData\n                      ? resultsData[`episode${page}`]\n                        ? resultsData[`episode${page}`][\"airDate\"][\"seconds\"] <\n                          new Date().getTime()\n                          ? \"LESS\"\n                          : \"GREATER\"\n                        : \"NO INFO ON AIR DATE YET\"\n                      : \"NO INFO ON AIR DATE YET\"}\n                  </p> */}\n                  <Grid container container align=\"center\" justify=\"center\">\n                    {renderEpisodePicks(page)}\n                  </Grid>\n                </div>\n              </Grid>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default LeagueDetails;\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectSeasonRoster\\SelectSeasonRoster.js",["146","147","148","149","150","151","152","153","154","155","156"],"import {\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\r\nimport \"./SelectSeasonRoster.css\";\r\nimport { db, storage } from \"../../firebase.js\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport QueenSelect from \"../../components/QueenSelect/QueenSelect\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EPISODE_NUM = \"season\";\r\n\r\nfunction SelectSeasonRoster() {\r\n  const classes = useStyles();\r\n  const [queens, setQueens] = React.useState([]);\r\n  const [seasonPicks, setSeasonPicks] = React.useState({});\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  let params = useParams();\r\n\r\n  useEffect(() => {\r\n    const queensArr = [];\r\n    db.collection(\"leagues\")\r\n      .doc(params.id)\r\n      .get()\r\n      .then(function (doc) {\r\n        console.log(\"SCHWOOOOP\", doc.data());\r\n        db.collection(\"shows\")\r\n          .doc(doc.data().showDetails.showID)\r\n          .collection(\"contestants\")\r\n          .get()\r\n          .then(function (docsArr) {\r\n            console.log(docsArr.docs[0].data());\r\n            docsArr.docs.map((doc) => {\r\n              queensArr.push(doc.data());\r\n              console.log(\"queens\", queens);\r\n              console.log(\"queensArr\", queensArr);\r\n            });\r\n            setQueens(queensArr);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (pointValue, pointCategory, event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setSeasonPicks({\r\n      ...seasonPicks,\r\n      [name]: { ...value, id: name, pointValue, pointCategory },\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // TODO: If current user isnt member of league, do not submit\r\n    // if (signUpFormState.password !== signUpFormState.passwordConfirm) {\r\n    //   return setError(\"Passwords do not match\");\r\n    // }\r\n\r\n    const submittedArr = {\r\n      category: `season`,\r\n      picks: Object.values(seasonPicks),\r\n    };\r\n    console.log(\"SUBMITTING: \", submittedArr);\r\n\r\n    // try {\r\n    console.log(\"STEP 1\");\r\n    setError(\"\");\r\n    setLoading(true);\r\n    db.collection(`leagues`)\r\n      .doc(params.id)\r\n      .collection(\"picks\")\r\n      .where(\"userID\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          db.collection(\"leagues\")\r\n            .doc(params.id)\r\n            .collection(\"picks\")\r\n            .doc(doc.id)\r\n            .update({\r\n              picks: firebase.firestore.FieldValue.arrayUnion(submittedArr),\r\n            })\r\n            .then(() => {\r\n              console.log(\"Success \", doc.id, \" => \", doc.data());\r\n              console.log(\"STEP 2\");\r\n              history.push(`/leagues/${params.id}`);\r\n            });\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        setError(\"Error writing document: \", error);\r\n        console.log(\"ERROR \", error);\r\n      });\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Select Season Roster</h1>\r\n      <p>\r\n        These are your picks for this season. Once you lock these in, you cannot\r\n        change them for the remainder of the season.\r\n      </p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Season Winner Select */}\r\n        <QueenSelect\r\n          queensArr={queens}\r\n          handleChange={(event) => handleChange(50, \"Season Winner\", event)}\r\n          currPickValue={seasonPicks.seasonWinner}\r\n          pointCategory=\"Season Winner\"\r\n          pointCategoryId=\"seasonWinner\"\r\n          pointValue=\"50\"\r\n          pointCategoryDescription=\"This is the winner of the season. If there is more than one winner,\r\n          points will be assigned if you have selected one of the winners.\"\r\n        />\r\n\r\n        {/* Miss Congeniality */}\r\n        <QueenSelect\r\n          queensArr={queens}\r\n          handleChange={(event) => handleChange(50, \"Miss Congeniality\", event)}\r\n          currPickValue={seasonPicks.missCongeniality}\r\n          pointCategory=\"Miss Congeniality\"\r\n          pointCategoryId=\"missCongeniality\"\r\n          pointValue=\"50\"\r\n          pointCategoryDescription=\"Miss Congeniality award goes to the Fan Favorite of the season on\r\n          the final episode.\"\r\n        />\r\n\r\n        {/* Miss Congeniality */}\r\n        <QueenSelect\r\n          queensArr={queens}\r\n          handleChange={(event) => handleChange(50, \"First Eliminated\", event)}\r\n          currPickValue={seasonPicks.firstEliminated}\r\n          pointCategory=\"First Eliminated\"\r\n          pointCategoryId=\"firstEliminated\"\r\n          pointValue=\"50\"\r\n          pointCategoryDescription=\"Select who you think will be the first eliminated. You will get points if you guess this correctly. If there is no elimination on episode one, points will be assigned when the first queen is eliminated.\"\r\n        />\r\n\r\n        <br></br>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          disabled={loading}\r\n          style={{ backgroundColor: \"#0099FF\", color: \"white\" }}\r\n        >\r\n          Submit Season Picks\r\n        </Button>\r\n      </form>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SelectSeasonRoster;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectEpisodeRoster\\SelectEpisodeRoster.js",["157","158","159","160","161","162","163","164","165","166","167"],"import {\n  Button,\n  Container,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\nimport \"./SelectEpisodeRoster.css\";\nimport { db, storage } from \"../../firebase.js\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport QueenSelect from \"../../components/QueenSelect/QueenSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 400,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst EPISODE_NUM = 1;\n\nfunction SelectEpisodeRoster() {\n  const classes = useStyles();\n  const [queens, setQueens] = React.useState([]);\n  const [episodePicks, setEpisodePicks] = React.useState({});\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const { currentUser } = useAuth();\n  let params = useParams();\n\n  useEffect(() => {\n    const queensArr = [];\n    db.collection(\"leagues\")\n      .doc(params.id)\n      .get()\n      .then(function (doc) {\n        console.log(\"SCHWOOOOP\", doc.data());\n        db.collection(\"shows\")\n          .doc(doc.data().showDetails.showID)\n          .collection(\"contestants\")\n          .get()\n          .then(function (docsArr) {\n            console.log(docsArr.docs[0].data());\n            docsArr.docs.map((doc) => {\n              queensArr.push(doc.data());\n              console.log(\"queens\", queens);\n              console.log(\"queensArr\", queensArr);\n            });\n            setQueens(queensArr);\n          });\n      });\n  }, []);\n\n  const handleChange = (pointValue, pointCategory, event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setEpisodePicks({\n      ...episodePicks,\n      [name]: { ...value, id: name, pointValue, pointCategory },\n    });\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // TODO: If current user isnt member of league, do not submit\n    // if (signUpFormState.password !== signUpFormState.passwordConfirm) {\n    //   return setError(\"Passwords do not match\");\n    // }\n\n    const submittedArr = {\n      category: `episode${params.episodeNum}`,\n      picks: Object.values(episodePicks),\n    };\n    console.log(\"SUBMITTING: \", submittedArr);\n\n    // try {\n    console.log(\"STEP 1\");\n    setError(\"\");\n    setLoading(true);\n    db.collection(`leagues`)\n      .doc(params.id)\n      .collection(\"picks\")\n      .where(\"userID\", \"==\", currentUser.uid)\n      .get()\n      .then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          db.collection(\"leagues\")\n            .doc(params.id)\n            .collection(\"picks\")\n            .doc(doc.id)\n            .update({\n              picks: firebase.firestore.FieldValue.arrayUnion(submittedArr),\n            })\n            .then(() => {\n              console.log(\"Success \", doc.id, \" => \", doc.data());\n              console.log(\"STEP 2\");\n              history.push(`/leagues/${params.id}`);\n            });\n        });\n      })\n      .catch(function (error) {\n        setError(\"Error writing document: \", error);\n        console.log(\"ERROR \", error);\n      });\n\n    setLoading(false);\n    console.log(\"STEP 3\");\n  }\n\n  return (\n    <Container>\n      <h1>Select Episode Roster</h1>\n      <p>\n        These are your picks for this episode. Submitting these picks will lock\n        them in for this episode.\n      </p>\n\n      <form onSubmit={handleSubmit}>\n        {/* Episode Winner Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(20, \"Episode Winner\", event)}\n          currPickValue={episodePicks.episodeWinner}\n          pointCategory=\"Episode Winner\"\n          pointCategoryId=\"episodeWinner\"\n          pointValue=\"20\"\n          pointCategoryDescription=\"This is the winner of the episode. If there is more than one winner,\n        points will be assigned if you have selected one of the winners.\"\n        />\n\n        {/* Maxi Challenge Winner Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) =>\n            handleChange(10, \"Maxi Challenge Winner\", event)\n          }\n          currPickValue={episodePicks.maxiChallengeWinner}\n          pointCategory=\"Maxi Challenge Winner\"\n          pointCategoryId=\"maxiChallengeWinner\"\n          pointValue=\"10\"\n          pointCategoryDescription=\"This is the winner of the main challenge of the episode. If there is\n          more than one winner, points will be awarded if you have selected\n          one of the winners.\"\n        />\n\n        {/* Mini Challenge Winner Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) =>\n            handleChange(10, \"Mini Challenge Winner\", event)\n          }\n          currPickValue={episodePicks.miniChallengeWinner}\n          pointCategory=\"Mini Challenge Winner\"\n          pointCategoryId=\"miniChallengeWinner\"\n          pointValue=\"10\"\n          pointCategoryDescription=\"This is the winner of the main challenge of the episode. If there is\n          more than one winner, points will be awarded if you have selected\n          one of the winners.\"\n        />\n\n        {/* Top #1 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Top Queen #1\", event)}\n          currPickValue={episodePicks.topQueen1}\n          pointCategory=\"Top Queen #1\"\n          pointCategoryId=\"topQueen1\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"This is the top two queens of the week (in no particular order). If\n          there is a number of queens in the top other than 2, you will\n          receive points for each queen you have that is in the top.\"\n        />\n\n        {/* Top #2 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Top Queen #2\", event)}\n          currPickValue={episodePicks.topQueen2}\n          pointCategory=\"Top Queen #2\"\n          pointCategoryId=\"topQueen2\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"This is the top queen #1 of the week (in no particular order). If\n          there is a number of queens in the top other than 2, you will\n          receive points for each queen you have that is in the top.\"\n        />\n\n        {/* Bottom #1 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Bottom Queen #1\", event)}\n          currPickValue={episodePicks.bottomQueen1}\n          pointCategory=\"Bottom Queen #1\"\n          pointCategoryId=\"bottomQueen1\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"This is the bottom queen #1 of the week (in no particular order).\n          If there is a number of queens in the bottom other than 2, you will\n          receive points for each queen you have that is in the bottom.\"\n        />\n\n        {/* Bottom #2 Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(5, \"Bottom Queen #2\", event)}\n          currPickValue={episodePicks.bottomQueen2}\n          pointCategory=\"Bottom Queen #2\"\n          pointCategoryId=\"bottomQueen2\"\n          pointValue=\"5\"\n          pointCategoryDescription=\"This is the bottom queen #2 of the week (in no particular order).\n          If there is a number of queens in the bottom other than 2, you will\n          receive points for each queen you have that is in the bottom.\"\n        />\n\n        {/* Eliminated Queen Select */}\n        <QueenSelect\n          queensArr={queens}\n          handleChange={(event) => handleChange(10, \"Eliminated Queen\", event)}\n          currPickValue={episodePicks.eliminated}\n          pointCategory=\"Eliminated Queen\"\n          pointCategoryId=\"eliminated\"\n          pointValue=\"10\"\n          pointCategoryDescription=\"This is the queen that you think will get eliminated this episode.\n          If there is more than one queens eliminated, points will be awarded\n          if you have selected one of the winners. If double shantay, no\n          points will be awarded.\"\n        />\n        <br></br>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={loading}\n          style={{ backgroundColor: \"#0099FF\", color: \"white\" }}\n        >\n          Submit Episode Picks\n        </Button>\n      </form>\n      <br></br>\n      <br></br>\n      <br></br>\n    </Container>\n  );\n}\n\nexport default SelectEpisodeRoster;\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeJumbotron\\HomeJumbotron.js",["168"],"import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./HomeJumbotron.css\";\r\n\r\nfunction HomeJumbotron(props) {\r\n  const jumbotron__style = {\r\n    backgroundColor: `#0099ff`,\r\n    height: `${props.height}px`,\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"homeJumbotron__main\" style={jumbotron__style}>\r\n        <div className=\"homeJumbotron__content\">\r\n          <h1 className=\"homeJumbotron__title\">\r\n            <strong>{props.headline}</strong>\r\n          </h1>\r\n          {/* <img className=\"homeJumbotron__logo\" src={props.logo}></img> */}\r\n          <p className=\"homeJumbotron__subtitle\">{props.subtitle}</p>\r\n        </div>\r\n      </div>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#0099ff\"\r\n          fillOpacity=\"1\"\r\n          d=\"M0,128L80,122.7C160,117,320,107,480,122.7C640,139,800,181,960,186.7C1120,192,1280,160,1360,144L1440,128L1440,0L1360,0C1280,0,1120,0,960,0C800,0,640,0,480,0C320,0,160,0,80,0L0,0Z\"\r\n        ></path>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeJumbotron;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\HomeInstructions\\HomeInstructions.js",["169"],"import React from \"react\";\r\nimport { Grid, Hidden, Typography } from \"@material-ui/core\";\r\nimport \"./HomeInstructions.css\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport BallotIcon from \"@material-ui/icons/Ballot\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\n\r\nfunction HomeInstructions() {\r\n  return (\r\n    <section className=\"HomeInstructions__Section\">\r\n      <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n        HOW DOES DERBY WORK?\r\n      </Typography>\r\n      <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"center\">\r\n        It's simple, really! All you have to do is Create, Choose, and Compete!\r\n      </Typography>\r\n      <div>\r\n        <Grid container spacing={0} justify=\"center\" alignItems=\"flex-start\">\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            align=\"center\"\r\n            className=\"HomeInstructions__Card\"\r\n          >\r\n            <AddBoxIcon className=\"HomeInstructions__Icon\"></AddBoxIcon>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n              1. Create a League\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"left\">\r\n              Start off by creating or joining a league. This creates a space\r\n              within a TV show for you and your friends to keep track of your\r\n              points!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            align=\"center\"\r\n            className=\"HomeInstructions__Card\"\r\n          >\r\n            <BallotIcon className=\"HomeInstructions__Icon\"></BallotIcon>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n              2. Choose Your Roster\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"left\">\r\n              To earn points, you will select rosters of your favorite reality\r\n              tv show contestants. Each week, you will earn points based on how\r\n              your selected contestants perform!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            align=\"center\"\r\n            className=\"HomeInstructions__Card\"\r\n          >\r\n            <SupervisedUserCircleIcon className=\"HomeInstructions__Icon\"></SupervisedUserCircleIcon>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n              3. Compete with Friends\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"left\">\r\n              And that's it! You're ready to compete against your friends!\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HomeInstructions;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\queenSelect\\queenSelect.js",["170","171","172","173","174"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\QueenSelect\\QueenSelect.js",["175","176"],"import {\r\n  Box,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport \"./QueenSelect.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    minWidth: 250,\r\n    \"& .MuiPaper-root\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"& .MuiMenu-list\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n    \"& .MuiMenuItem-root\": {\r\n      float: \"left\",\r\n    },\r\n    formControl: {\r\n      width: 250,\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction QueenSelect(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {/* Episode Winner Select */}\r\n      <div className=\"QueenSelect__Card\">\r\n        <Grid container>\r\n          <Grid item xs={8} sm={8}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {props.pointCategory}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4} sm={4} align=\"right\">\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"subtitle1\"\r\n              component=\"subtitle1\"\r\n              className=\"QueenSelect__PointValue\"\r\n            >\r\n              {props.pointValue} POINTS\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <p>{props.pointCategoryDescription}</p>\r\n\r\n        <div>\r\n          <FormControl className={classes.root}>\r\n            <InputLabel id=\"demo-simple-select-label\">\r\n              {props.pointCategory}\r\n            </InputLabel>\r\n            <Select\r\n              required\r\n              labelId={props.pointCategoryId}\r\n              id={props.pointCategoryId}\r\n              name={props.pointCategoryId}\r\n              value={props.currPickValue}\r\n              onChange={props.handleChange}\r\n            >\r\n              {props.queensArr.map((queen) => (\r\n                <div\r\n                  value={queen}\r\n                  key={queen.queenName}\r\n                  className={classes.root}\r\n                >\r\n                  <MenuItem className={classes.root}>\r\n                    <img\r\n                      className=\"SelectEpisodeRoster__selectImg\"\r\n                      src={queen.queenIMG}\r\n                      alt={`image of ${queen.queenName}`}\r\n                    ></img>\r\n                    <p className=\"SelectEpisodeRoster__selectName\">\r\n                      {queen.queenName}\r\n                    </p>\r\n                  </MenuItem>\r\n                </div>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueenSelect;\r\n",{"ruleId":"177","severity":1,"message":"178","line":8,"column":3,"nodeType":"179","messageId":"180","endLine":8,"endColumn":9},{"ruleId":"177","severity":1,"message":"181","line":9,"column":3,"nodeType":"179","messageId":"180","endLine":9,"endColumn":8},{"ruleId":"177","severity":1,"message":"182","line":10,"column":3,"nodeType":"179","messageId":"180","endLine":10,"endColumn":7},{"ruleId":"177","severity":1,"message":"183","line":11,"column":3,"nodeType":"179","messageId":"180","endLine":11,"endColumn":14},{"ruleId":"177","severity":1,"message":"184","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"185","line":2,"column":27,"nodeType":"179","messageId":"180","endLine":2,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":2,"column":35,"nodeType":"179","messageId":"180","endLine":2,"endColumn":41},{"ruleId":"177","severity":1,"message":"181","line":2,"column":43,"nodeType":"179","messageId":"180","endLine":2,"endColumn":48},{"ruleId":"177","severity":1,"message":"186","line":13,"column":10,"nodeType":"179","messageId":"180","endLine":13,"endColumn":15},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":22,"column":6,"nodeType":"193","endLine":22,"endColumn":8,"suggestions":"194"},{"ruleId":"177","severity":1,"message":"195","line":1,"column":32,"nodeType":"179","messageId":"180","endLine":1,"endColumn":42},{"ruleId":"177","severity":1,"message":"196","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":23,"column":15,"nodeType":"199","endLine":23,"endColumn":66},{"ruleId":"200","severity":1,"message":"201","line":28,"column":17,"nodeType":"202","endLine":28,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":35,"column":17,"nodeType":"202","endLine":35,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":42,"column":17,"nodeType":"202","endLine":42,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":49,"column":17,"nodeType":"202","endLine":49,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":56,"column":17,"nodeType":"202","endLine":56,"endColumn":32},{"ruleId":"177","severity":1,"message":"203","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":17},{"ruleId":"177","severity":1,"message":"195","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":17,"column":11,"nodeType":"199","endLine":17,"endColumn":61},{"ruleId":"177","severity":1,"message":"204","line":25,"column":7,"nodeType":"179","messageId":"180","endLine":25,"endColumn":13},{"ruleId":"177","severity":1,"message":"205","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":23},{"ruleId":"177","severity":1,"message":"206","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"207","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":24},{"ruleId":"177","severity":1,"message":"208","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":16},{"ruleId":"177","severity":1,"message":"209","line":10,"column":8,"nodeType":"179","messageId":"180","endLine":10,"endColumn":11},{"ruleId":"177","severity":1,"message":"210","line":13,"column":8,"nodeType":"179","messageId":"180","endLine":13,"endColumn":24},{"ruleId":"177","severity":1,"message":"196","line":19,"column":10,"nodeType":"179","messageId":"180","endLine":19,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":56,"column":6,"nodeType":"193","endLine":56,"endColumn":8,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":91,"column":34,"nodeType":"215","messageId":"216","endLine":91,"endColumn":36},{"ruleId":"191","severity":1,"message":"211","line":108,"column":6,"nodeType":"193","endLine":108,"endColumn":8,"suggestions":"217"},{"ruleId":"177","severity":1,"message":"218","line":320,"column":9,"nodeType":"179","messageId":"180","endLine":320,"endColumn":19},{"ruleId":"213","severity":1,"message":"214","line":322,"column":25,"nodeType":"215","messageId":"216","endLine":322,"endColumn":27},{"ruleId":"213","severity":1,"message":"214","line":325,"column":37,"nodeType":"215","messageId":"216","endLine":325,"endColumn":39},{"ruleId":"213","severity":1,"message":"214","line":326,"column":39,"nodeType":"215","messageId":"216","endLine":326,"endColumn":41},{"ruleId":"219","severity":1,"message":"220","line":404,"column":25,"nodeType":"202","endLine":404,"endColumn":34},{"ruleId":"219","severity":1,"message":"220","line":465,"column":35,"nodeType":"202","endLine":465,"endColumn":44},{"ruleId":"177","severity":1,"message":"221","line":4,"column":3,"nodeType":"179","messageId":"180","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"222","line":5,"column":3,"nodeType":"179","messageId":"180","endLine":5,"endColumn":13},{"ruleId":"177","severity":1,"message":"223","line":6,"column":3,"nodeType":"179","messageId":"180","endLine":6,"endColumn":11},{"ruleId":"177","severity":1,"message":"224","line":7,"column":3,"nodeType":"179","messageId":"180","endLine":7,"endColumn":9},{"ruleId":"177","severity":1,"message":"225","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":17},{"ruleId":"177","severity":1,"message":"226","line":13,"column":14,"nodeType":"179","messageId":"180","endLine":13,"endColumn":21},{"ruleId":"177","severity":1,"message":"227","line":30,"column":7,"nodeType":"179","messageId":"180","endLine":30,"endColumn":18},{"ruleId":"177","severity":1,"message":"228","line":33,"column":9,"nodeType":"179","messageId":"180","endLine":33,"endColumn":16},{"ruleId":"177","severity":1,"message":"186","line":37,"column":10,"nodeType":"179","messageId":"180","endLine":37,"endColumn":15},{"ruleId":"213","severity":1,"message":"214","line":56,"column":36,"nodeType":"215","messageId":"216","endLine":56,"endColumn":38},{"ruleId":"191","severity":1,"message":"229","line":64,"column":6,"nodeType":"193","endLine":64,"endColumn":8,"suggestions":"230"},{"ruleId":"177","severity":1,"message":"221","line":4,"column":3,"nodeType":"179","messageId":"180","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"222","line":5,"column":3,"nodeType":"179","messageId":"180","endLine":5,"endColumn":13},{"ruleId":"177","severity":1,"message":"223","line":6,"column":3,"nodeType":"179","messageId":"180","endLine":6,"endColumn":11},{"ruleId":"177","severity":1,"message":"224","line":7,"column":3,"nodeType":"179","messageId":"180","endLine":7,"endColumn":9},{"ruleId":"177","severity":1,"message":"225","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":17},{"ruleId":"177","severity":1,"message":"226","line":13,"column":14,"nodeType":"179","messageId":"180","endLine":13,"endColumn":21},{"ruleId":"177","severity":1,"message":"227","line":30,"column":7,"nodeType":"179","messageId":"180","endLine":30,"endColumn":18},{"ruleId":"177","severity":1,"message":"228","line":33,"column":9,"nodeType":"179","messageId":"180","endLine":33,"endColumn":16},{"ruleId":"177","severity":1,"message":"186","line":37,"column":10,"nodeType":"179","messageId":"180","endLine":37,"endColumn":15},{"ruleId":"213","severity":1,"message":"214","line":56,"column":36,"nodeType":"215","messageId":"216","endLine":56,"endColumn":38},{"ruleId":"191","severity":1,"message":"229","line":64,"column":6,"nodeType":"193","endLine":64,"endColumn":8,"suggestions":"231"},{"ruleId":"177","severity":1,"message":"195","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":20},{"ruleId":"177","severity":1,"message":"232","line":2,"column":16,"nodeType":"179","messageId":"180","endLine":2,"endColumn":22},{"ruleId":"177","severity":1,"message":"221","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":21},{"ruleId":"177","severity":1,"message":"222","line":1,"column":23,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"177","severity":1,"message":"223","line":1,"column":35,"nodeType":"179","messageId":"180","endLine":1,"endColumn":43},{"ruleId":"177","severity":1,"message":"224","line":1,"column":45,"nodeType":"179","messageId":"180","endLine":1,"endColumn":51},{"ruleId":"177","severity":1,"message":"233","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":20},{"ruleId":"177","severity":1,"message":"209","line":2,"column":3,"nodeType":"179","messageId":"180","endLine":2,"endColumn":6},{"ruleId":"234","severity":1,"message":"235","line":79,"column":21,"nodeType":"199","endLine":83,"endColumn":22},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'error' is assigned a value but never used.","no-native-reassign",["236"],"no-negated-in-lhs",["237"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["238"],"'Typography' is defined but never used.","'Copyright' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Container' is defined but never used.","'params' is assigned a value but never used.","'useRef' is defined but never used.","'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["239"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["240"],"'episodeSum' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'s13Poster' is defined but never used.","'storage' is defined but never used.","'EPISODE_NUM' is assigned a value but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'queens'. Either include them or remove the dependency array.",["241"],["242"],"'Hidden' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},{"desc":"248","fix":"249"},{"desc":"248","fix":"250"},"Update the dependencies array to be: [currentUser.uid]",{"range":"251","text":"252"},"Update the dependencies array to be: [params.id]",{"range":"253","text":"254"},{"range":"255","text":"254"},"Update the dependencies array to be: [params.id, queens]",{"range":"256","text":"257"},{"range":"258","text":"257"},[897,899],"[currentUser.uid]",[1951,1953],"[params.id]",[3292,3294],[1911,1913],"[params.id, queens]",[1845,1847]]