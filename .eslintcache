[{"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\index.js":"1","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\App.js":"2","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Leagues\\Leagues.js":"5","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Footer\\Footer.js":"6","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Home\\Home.js":"7","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Jumbotron\\Jumbotron.js":"8","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\JoinLeague\\JoinLeague.js":"9","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\CreateLeague\\CreateLeague.js":"10","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ShowCard\\ShowCard.js":"11","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SignUp\\SignUp.js":"12","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\contexts\\AuthContext.js":"13","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\firebase.js":"14","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Login\\Login.js":"15","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ForgotPassword\\ForgotPassword.js":"16","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\LeagueDetails\\LeagueDetails.js":"17","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectSeasonRoster\\SelectSeasonRoster.js":"18","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectEpisodeRoster\\SelectEpisodeRoster.js":"19"},{"size":500,"mtime":1608054245769,"results":"20","hashOfConfig":"21"},{"size":2474,"mtime":1608234616061,"results":"22","hashOfConfig":"21"},{"size":377,"mtime":1606862747486,"results":"23","hashOfConfig":"21"},{"size":3041,"mtime":1609175528974,"results":"24","hashOfConfig":"21"},{"size":1225,"mtime":1608162315628,"results":"25","hashOfConfig":"21"},{"size":1679,"mtime":1609174937822,"results":"26","hashOfConfig":"21"},{"size":1208,"mtime":1608057726865,"results":"27","hashOfConfig":"21"},{"size":660,"mtime":1607553872830,"results":"28","hashOfConfig":"21"},{"size":2039,"mtime":1608745964903,"results":"29","hashOfConfig":"21"},{"size":2197,"mtime":1608676953766,"results":"30","hashOfConfig":"21"},{"size":1881,"mtime":1607990119486,"results":"31","hashOfConfig":"21"},{"size":6859,"mtime":1609173092390,"results":"32","hashOfConfig":"21"},{"size":1743,"mtime":1609173021388,"results":"33","hashOfConfig":"21"},{"size":815,"mtime":1608251718590,"results":"34","hashOfConfig":"21"},{"size":5341,"mtime":1608140022327,"results":"35","hashOfConfig":"21"},{"size":4888,"mtime":1608140942476,"results":"36","hashOfConfig":"21"},{"size":7099,"mtime":1609173177400,"results":"37","hashOfConfig":"21"},{"size":10037,"mtime":1608239591700,"results":"38","hashOfConfig":"21"},{"size":15492,"mtime":1608576641081,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1mhqtdp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\index.js",[],["88","89"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\App.js",["90"],"import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Footer from \"./components/Footer/Footer.js\";\nimport Leagues from \"./pages/Leagues/Leagues.js\";\nimport Home from \"./pages/Home/Home.js\";\nimport CreateLeague from \"./pages/CreateLeague/CreateLeague\";\nimport JoinLeague from \"./pages/JoinLeague/JoinLeague\";\nimport SignUp from \"./pages/SignUp/SignUp\";\nimport Login from \"./pages/Login/Login\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport Nav from \"./components/Nav/Nav\";\nimport ForgotPassword from \"./components/ForgotPassword/ForgotPassword\";\nimport LeagueDetails from \"./pages/LeagueDetails/LeagueDetails\";\nimport SelectSeasonRoster from \"./pages/SelectSeasonRoster/SelectSeasonRoster\";\nimport SelectEpisodeRoster from \"./pages/SelectEpisodeRoster/SelectEpisodeRoster\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <AuthProvider>\n          <nav>\n            <Nav></Nav>\n          </nav>\n          <Switch>\n            <Route\n              path={`${process.env.PUBLIC_URL}/leagues/:id/selectseasonroster`}\n            >\n              <SelectSeasonRoster />\n            </Route>\n            <Route\n              path={`${process.env.PUBLIC_URL}/leagues/:id/selectepisoderoster`}\n            >\n              <SelectEpisodeRoster />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/leagues/:id`}>\n              <LeagueDetails />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/signup`}>\n              <SignUp />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/forgot-password`}>\n              <ForgotPassword />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/login`}>\n              <Login />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/leagues`}>\n              <Leagues />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/createleague`}>\n              <CreateLeague />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/joinleague`}>\n              <JoinLeague />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/`}>\n              <Home />\n            </Route>\n            <Route component={Home} />\n          </Switch>\n        </AuthProvider>\n\n        <footer>\n          <Footer></Footer>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Nav\\Nav.js",["91","92","93","94","95"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Leagues\\Leagues.js",["96"],"import React, { useEffect, useState } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport leaguePageBkg from \"../../assets/images/bkg-3.jpg\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { db } from \"../../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Leagues() {\r\n  const { currentUser } = useAuth();\r\n  const [leagues, setLeagues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"leagues\")\r\n      .where(\"members\", \"array-contains\", currentUser.uid)\r\n      .onSnapshot((snapshot) => {\r\n        setLeagues(snapshot.docs.map((doc) => doc));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron\r\n        image={leaguePageBkg}\r\n        height=\"300\"\r\n        headline=\"YOUR LEAGUES\"\r\n      ></Jumbotron>\r\n      <h1>YOUR LEAGUES</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n        veniam\r\n      </p>\r\n      {leagues.map((league) => (\r\n        <Link to={`/leagues/${league.id}`}>\r\n          <div>{league.data().leagueName}</div>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leagues;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Home\\Home.js",["97"],"import React from \"react\";\r\nimport \"./Home.css\";\r\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\r\nimport homeBkg from \"../../assets/images/bkg-1.png\";\r\nimport derbyLogo from \"../../assets/images/derby_logo_pink-01.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ShowCard from \"../../components/ShowCard/ShowCard\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Jumbotron\r\n        image={homeBkg}\r\n        headline=\"- Welcome to -\"\r\n        subtitle=\"Competitive, Fantasy-Style TV Bracket Play\"\r\n        height=\"700\"\r\n        logo={derbyLogo}\r\n      ></Jumbotron>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n          CURRENT & UPCOMING\r\n        </Typography>\r\n        <div>\r\n          <ShowCard />\r\n        </div>\r\n      </Container>\r\n      <h2>HOW DOES DERBY WORK?</h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n        veniam\r\n      </p>\r\n      <h2>INSTRUCTIONS</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\Jumbotron\\Jumbotron.js",["98"],"import React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nfunction Jumbotron(props) {\r\n  const jumbotron__style = {\r\n    backgroundImage: `url(${props.image})`,\r\n    height: `${props.height}px`,\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron__main\" style={jumbotron__style}>\r\n        <div className=\"jumbotron__content\">\r\n          <h1 className=\"jumbotron__title\">\r\n            <strong>{props.headline}</strong>\r\n          </h1>\r\n          <img className=\"jumbotron__logo\" src={props.logo}></img>\r\n          <p className=\"jumbotron__subtitle\">{props.subtitle}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\JoinLeague\\JoinLeague.js",["99"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\CreateLeague\\CreateLeague.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ShowCard\\ShowCard.js",["100"],"import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\n\r\nfunction ShowCard() {\r\n  return (\r\n    <Card className=\"Home__SeasonCard\">\r\n      <CardActionArea className=\"Home__SeasonCardWrap\">\r\n        <img className=\"Home__SeasonCardImg\" src={s13Poster}></img>\r\n        <CardMedia image={s13Poster} title=\"S13 Poster\" />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            RuPaul's Drag Race\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Season 13\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={6} align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              href=\"/createleague\"\r\n              target=\"\"\r\n              className=\"leagueBtn\"\r\n            >\r\n              Create A League\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6} align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              href=\"/joinleague\"\r\n              target=\"\"\r\n              className=\"leagueBtn\"\r\n            >\r\n              Join a League\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ShowCard;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SignUp\\SignUp.js",["101","102","103","104"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\firebase.js",[],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\Login\\Login.js",["105","106","107","108","109","110"],"import React, { useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HistoryRounded } from \"@material-ui/icons\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const [loginFormState, setLoginFormState] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setLoginFormState({\r\n      ...loginFormState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(loginFormState.email, loginFormState.password);\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to sign in\");\r\n      console.log(loginFormState.email, loginFormState.password);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log In\r\n          </Typography>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/forgot-password\" variant=\"body2\">\r\n                  Forgot Password?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={loading}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  Need an account? Sign Up\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\components\\ForgotPassword\\ForgotPassword.js",["111","112","113","114","115"],"import React, { useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const [loginFormState, setLoginFormState] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setLoginFormState({\r\n      ...loginFormState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(loginFormState.email);\r\n      setMessage(\"Check your inbox for further instructions\");\r\n    } catch {\r\n      setError(\"Failed to reset password\");\r\n      console.log(loginFormState.email, loginFormState.password);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Password Reset\r\n          </Typography>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          {message && <Alert severity=\"success\">{message}</Alert>}\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Login?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={loading}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  Need an account? Sign Up\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\LeagueDetails\\LeagueDetails.js",["116","117","118","119","120"],"C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectSeasonRoster\\SelectSeasonRoster.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useState } from \"react\";\r\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\r\nimport \"./SelectSeasonRoster.css\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SelectSeasonRoster() {\r\n  const classes = useStyles();\r\n  const [seasonPicks, setSeasonPicks] = React.useState({\r\n    seasonWinner: \"\",\r\n    missCongeniality: \"\",\r\n    firstEliminated: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  let params = useParams();\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    console.log(event.target);\r\n    setSeasonPicks({ ...seasonPicks, [name]: value });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // TODO: If current user isnt member of league, do not submit\r\n    // if (signUpFormState.password !== signUpFormState.passwordConfirm) {\r\n    //   return setError(\"Passwords do not match\");\r\n    // }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      db.collection(`leagues`).doc(params.id).collection(\"picks\").add({\r\n        userID: currentUser.uid,\r\n        seasonPicks: { seasonPicks },\r\n        episodePicks: [],\r\n      });\r\n      history.push(`/leagues/${params.id}`);\r\n    } catch {\r\n      setError(\"Failed to save Season Picks\");\r\n      console.log(\"something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Season Roster</h1>\r\n      <p>\r\n        These are your picks for the season. Once you lock these in, you cannot\r\n        change them for the remainder of the season.\r\n      </p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Season Winner Select */}\r\n        <div>\r\n          <h2>Season Winner</h2>\r\n          <p>\r\n            This is the winner of the season. If there is more than one winner,\r\n            points will be assigned if you have selected one of the winners.\r\n          </p>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Season Winner\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"seasonWinner\"\r\n                id=\"seasonWinner\"\r\n                name=\"seasonWinner\"\r\n                value={seasonPicks.seasonWinner}\r\n                onChange={handleChange}\r\n                className=\"SelectSeasonRoster__Select\"\r\n              >\r\n                <div value={10}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">\r\n                      Miss Vangie\r\n                    </p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={20}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Trixie</p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={30}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Katya</p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={40}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Delta Work</p>\r\n                  </MenuItem>\r\n                </div>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Miss Congeniality Select */}\r\n        <div>\r\n          <h2>Miss Congeniality</h2>\r\n          <p>\r\n            Miss Congeniality award goes to the Fan Favorite of the season on\r\n            the final episode.\r\n          </p>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Miss Congeniality\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"missCongeniality\"\r\n                id=\"missCongeniality\"\r\n                name=\"missCongeniality\"\r\n                value={seasonPicks.missCongeniality}\r\n                onChange={handleChange}\r\n                className=\"SelectSeasonRoster__Select\"\r\n              >\r\n                <div value={10}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">\r\n                      Miss Vangie\r\n                    </p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={20}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Trixie</p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={30}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Katya</p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={40}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Delta Work</p>\r\n                  </MenuItem>\r\n                </div>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        {/* First Eliminated Select */}\r\n        <div>\r\n          <h2>First Eliminated</h2>\r\n          <p>\r\n            Select who you think will be the first eliminated. You will get\r\n            points if you guess this correctly. If there is no elimination on\r\n            episode one, points will be assigned when the first queen is\r\n            eliminated.\r\n          </p>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                First Eliminated\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"firstEliminated\"\r\n                id=\"firstEliminated\"\r\n                name=\"firstEliminated\"\r\n                value={seasonPicks.firstEliminated}\r\n                onChange={handleChange}\r\n                className=\"SelectSeasonRoster__Select\"\r\n              >\r\n                <div value={10}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">\r\n                      Miss Vangie\r\n                    </p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={20}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Trixie</p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={30}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Katya</p>\r\n                  </MenuItem>\r\n                </div>\r\n                <div value={40}>\r\n                  <MenuItem className=\"SelectSeasonRoster__MenuItem\">\r\n                    <img\r\n                      className=\"SelectSeasonRoster__selectImg\"\r\n                      src={s13Poster}\r\n                    ></img>\r\n                    <p className=\"SelectSeasonRoster__selectName\">Delta Work</p>\r\n                  </MenuItem>\r\n                </div>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Submit Season Picks\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectSeasonRoster;\r\n","C:\\Users\\Jack\\UW-Coding-Bootcamp\\projects\\fantasy-drag-race-frontend\\src\\pages\\SelectEpisodeRoster\\SelectEpisodeRoster.js",["135","136","137","138","139","140","141","142","143","144","145","146","147"],"import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport s13Poster from \"../../assets/images/rpdr_s13_poster.jpg\";\r\nimport \"./SelectEpisodeRoster.css\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SelectEpisodeRoster() {\r\n  const classes = useStyles();\r\n  const [queens, setQueens] = React.useState([]);\r\n  const [episodePicks, setEpisodePicks] = React.useState({\r\n    episodeNum: 1,\r\n    episodeWinner: \"\",\r\n    maxiChallengeWinner: \"\",\r\n    miniChallengeWinner: \"\",\r\n    topQueen1: \"\",\r\n    topQueen2: \"\",\r\n    bottomQueen1: \"\",\r\n    bottomQueen2: \"\",\r\n    eliminated: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  let params = useParams();\r\n\r\n  useEffect(() => {\r\n    const queensArr = [];\r\n    db.collection(\"shows\")\r\n      .doc(\"RPDR\")\r\n      .collection(\"seasons\")\r\n      .doc(\"US_Reg_13\")\r\n      .collection(\"queens\")\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          queensArr.push(doc.data());\r\n          console.log(\"queens\", queens);\r\n          console.log(\"queensArr\", queensArr);\r\n        });\r\n        setQueens(queensArr);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    // console.log(event.target);\r\n    setEpisodePicks({ ...episodePicks, [name]: value });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // TODO: If current user isnt member of league, do not submit\r\n    // if (signUpFormState.password !== signUpFormState.passwordConfirm) {\r\n    //   return setError(\"Passwords do not match\");\r\n    // }\r\n\r\n    // try {\r\n    console.log(\"STEP 1\");\r\n    setError(\"\");\r\n    setLoading(true);\r\n    db.collection(`leagues`)\r\n      .doc(params.id)\r\n      .collection(\"picks\")\r\n      .where(\"userID\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          db.collection(\"leagues\")\r\n            .doc(params.id)\r\n            .collection(\"picks\")\r\n            .doc(doc.id)\r\n            .update({\r\n              episodePicks: firebase.firestore.FieldValue.arrayUnion(\r\n                episodePicks\r\n              ),\r\n            });\r\n          console.log(\"Success \", doc.id, \" => \", doc.data());\r\n          console.log(\"STEP 2\");\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        setError(\"Error writing document: \", error);\r\n        console.log(\"ERROR \", error);\r\n      });\r\n\r\n    history.push(`/leagues/${params.id}`);\r\n    setLoading(false);\r\n    console.log(\"STEP 3\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Episode Roster</h1>\r\n      <p>\r\n        These are your picks for the season. Once you lock these in, you cannot\r\n        change them for the remainder of the season.\r\n      </p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Episode Winner Select */}\r\n        <div>\r\n          <h2>Episode Winner</h2>\r\n          <p>\r\n            This is the winner of the episode. If there is more than one winner,\r\n            points will be assigned if you have selected one of the winners.\r\n          </p>\r\n\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Episode Winner\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"episodeWinner\"\r\n                id=\"episodeWinner\"\r\n                name=\"episodeWinner\"\r\n                value={episodePicks.episodeWinner}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Maxi Challenge Winner Select */}\r\n        <div>\r\n          <h2>Maxi Challenge Winner</h2>\r\n          <p>\r\n            This is the winner of the main challenge of the episode. If there is\r\n            more than one winner, points will be awarded if you have selected\r\n            one of the winners.\r\n          </p>\r\n\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Maxi Challenge Winner\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"maxiChallengeWinner\"\r\n                id=\"maxiChallengeWinner\"\r\n                name=\"maxiChallengeWinner\"\r\n                value={episodePicks.maxiChallengeWinner}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mini Challenge Winner Select */}\r\n        <div>\r\n          <h2>Mini Challenge Winner</h2>\r\n          <p>\r\n            This is the winner of the main challenge of the episode. If there is\r\n            more than one winner, points will be awarded if you have selected\r\n            one of the winners.\r\n          </p>\r\n\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Mini Challenge Winner\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"miniChallengeWinner\"\r\n                id=\"miniChallengeWinner\"\r\n                name=\"miniChallengeWinner\"\r\n                value={episodePicks.miniChallengeWinner}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top 2 of the Week Select */}\r\n        <div>\r\n          <h2>Top 2 of the Week</h2>\r\n          <p>\r\n            This is the top two queens of the week (in no particular order). If\r\n            there is a number of queens in the top other than 2, you will\r\n            receive points for each queen you have that is in the top.\r\n          </p>\r\n\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Top Queen of the Week #1\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"topQueen1\"\r\n                id=\"topQueen1\"\r\n                name=\"topQueen1\"\r\n                value={episodePicks.topQueen1}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Top Queen of the Week #2\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"topQueen2\"\r\n                id=\"topQueen2\"\r\n                name=\"topQueen2\"\r\n                value={episodePicks.topQueen2}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bottom 2 of the Week Select */}\r\n        <div>\r\n          <h2>Bottom 2 of the Week</h2>\r\n          <p>\r\n            This is the bottom two queens of the week (in no particular order).\r\n            If there is a number of queens in the bottom other than 2, you will\r\n            receive points for each queen you have that is in the bottom.\r\n          </p>\r\n\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Bottom Queen of the Week #1\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"bottomQueen1\"\r\n                id=\"bottomQueen1\"\r\n                name=\"bottomQueen1\"\r\n                value={episodePicks.bottomQueen1}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Bottom Queen of the Week #2\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"bottomQueen2\"\r\n                id=\"bottomQueen2\"\r\n                name=\"bottomQueen2\"\r\n                value={episodePicks.bottomQueen2}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Eliminated Queen Select */}\r\n        <div>\r\n          <h2>Eliminated Queen</h2>\r\n          <p>\r\n            This is the queen that you think will get eliminated this episode.\r\n            If there is more than one queens eliminated, points will be awarded\r\n            if you have selected one of the winners. If double shantay, no\r\n            points will be awarded.\r\n          </p>\r\n\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Mini Challenge Winner\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"eliminated\"\r\n                id=\"eliminated\"\r\n                name=\"eliminated\"\r\n                value={episodePicks.eliminated}\r\n                onChange={handleChange}\r\n                className=\"SelectEpisodeRoster__Select\"\r\n              >\r\n                {queens.map((queen) => (\r\n                  <div value={queen.name} key={queen.name}>\r\n                    <MenuItem className=\"SelectEpisodeRoster__MenuItem\">\r\n                      <img\r\n                        className=\"SelectEpisodeRoster__selectImg\"\r\n                        src={queen.imageURL}\r\n                        alt={`image of ${queen.name}`}\r\n                      ></img>\r\n                      <p className=\"SelectEpisodeRoster__selectName\">\r\n                        {queen.name}\r\n                      </p>\r\n                    </MenuItem>\r\n                  </div>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Submit Season Picks\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectEpisodeRoster;\r\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":3,"column":50,"nodeType":"154","messageId":"155","endLine":3,"endColumn":54},{"ruleId":"152","severity":1,"message":"156","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"157","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"158","line":2,"column":35,"nodeType":"154","messageId":"155","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"159","line":2,"column":43,"nodeType":"154","messageId":"155","endLine":2,"endColumn":48},{"ruleId":"152","severity":1,"message":"160","line":12,"column":10,"nodeType":"154","messageId":"155","endLine":12,"endColumn":15},{"ruleId":"161","severity":1,"message":"162","line":18,"column":6,"nodeType":"163","endLine":18,"endColumn":8,"suggestions":"164"},{"ruleId":"152","severity":1,"message":"165","line":9,"column":8,"nodeType":"154","messageId":"155","endLine":9,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":16,"column":11,"nodeType":"168","endLine":16,"endColumn":61},{"ruleId":"152","severity":1,"message":"169","line":12,"column":7,"nodeType":"154","messageId":"155","endLine":12,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":15,"column":9,"nodeType":"168","endLine":15,"endColumn":62},{"ruleId":"152","severity":1,"message":"170","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":23},{"ruleId":"152","severity":1,"message":"171","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":11},{"ruleId":"152","severity":1,"message":"172","line":19,"column":10,"nodeType":"154","messageId":"155","endLine":19,"endColumn":19},{"ruleId":"152","severity":1,"message":"173","line":75,"column":11,"nodeType":"154","messageId":"155","endLine":75,"endColumn":17},{"ruleId":"152","severity":1,"message":"170","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":23},{"ruleId":"152","severity":1,"message":"174","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":24},{"ruleId":"152","severity":1,"message":"175","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":16},{"ruleId":"152","severity":1,"message":"171","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":11},{"ruleId":"152","severity":1,"message":"176","line":18,"column":10,"nodeType":"154","messageId":"155","endLine":18,"endColumn":24},{"ruleId":"152","severity":1,"message":"172","line":20,"column":10,"nodeType":"154","messageId":"155","endLine":20,"endColumn":19},{"ruleId":"152","severity":1,"message":"170","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":23},{"ruleId":"152","severity":1,"message":"174","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":24},{"ruleId":"152","severity":1,"message":"175","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":16},{"ruleId":"152","severity":1,"message":"171","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":11},{"ruleId":"152","severity":1,"message":"172","line":18,"column":10,"nodeType":"154","messageId":"155","endLine":18,"endColumn":19},{"ruleId":"152","severity":1,"message":"177","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":17},{"ruleId":"152","severity":1,"message":"178","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":21},{"ruleId":"152","severity":1,"message":"179","line":13,"column":8,"nodeType":"154","messageId":"155","endLine":13,"endColumn":13},{"ruleId":"152","severity":1,"message":"180","line":29,"column":7,"nodeType":"154","messageId":"155","endLine":29,"endColumn":18},{"ruleId":"161","severity":1,"message":"181","line":76,"column":6,"nodeType":"163","endLine":76,"endColumn":8,"suggestions":"182"},{"ruleId":"152","severity":1,"message":"160","line":34,"column":10,"nodeType":"154","messageId":"155","endLine":34,"endColumn":15},{"ruleId":"152","severity":1,"message":"183","line":35,"column":10,"nodeType":"154","messageId":"155","endLine":35,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":102,"column":21,"nodeType":"168","endLine":105,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":113,"column":21,"nodeType":"168","endLine":116,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":122,"column":21,"nodeType":"168","endLine":125,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":131,"column":21,"nodeType":"168","endLine":134,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":165,"column":21,"nodeType":"168","endLine":168,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":176,"column":21,"nodeType":"168","endLine":179,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":185,"column":21,"nodeType":"168","endLine":188,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":194,"column":21,"nodeType":"168","endLine":197,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":230,"column":21,"nodeType":"168","endLine":233,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":241,"column":21,"nodeType":"168","endLine":244,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":250,"column":21,"nodeType":"168","endLine":253,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":259,"column":21,"nodeType":"168","endLine":262,"endColumn":22},{"ruleId":"152","severity":1,"message":"184","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":17},{"ruleId":"152","severity":1,"message":"185","line":12,"column":14,"nodeType":"154","messageId":"155","endLine":12,"endColumn":21},{"ruleId":"152","severity":1,"message":"160","line":42,"column":10,"nodeType":"154","messageId":"155","endLine":42,"endColumn":15},{"ruleId":"152","severity":1,"message":"183","line":43,"column":10,"nodeType":"154","messageId":"155","endLine":43,"endColumn":17},{"ruleId":"161","severity":1,"message":"186","line":64,"column":6,"nodeType":"163","endLine":64,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":148,"column":23,"nodeType":"168","endLine":152,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":189,"column":23,"nodeType":"168","endLine":193,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":230,"column":23,"nodeType":"168","endLine":234,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":271,"column":23,"nodeType":"168","endLine":275,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":301,"column":23,"nodeType":"168","endLine":305,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":342,"column":23,"nodeType":"168","endLine":346,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":372,"column":23,"nodeType":"168","endLine":376,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":414,"column":23,"nodeType":"168","endLine":418,"endColumn":24},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'Authentication' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'params' is assigned a value but never used.","'useRef' is defined but never used.","'Box' is defined but never used.","'Copyright' is defined but never used.","'signup' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'HistoryRounded' is defined but never used.","'Jumbotron' is defined but never used.","'leaguePageBkg' is defined but never used.","'Paper' is defined but never used.","'LEAGUE_DATA' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'leagueData' and 'params.id'. Either include them or remove the dependency array.",["193"],"'loading' is assigned a value but never used.","'s13Poster' is defined but never used.","'storage' is defined but never used.","React Hook useEffect has a missing dependency: 'queens'. Either include it or remove the dependency array.",["194"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [currentUser.uid]",{"range":"201","text":"202"},"Update the dependencies array to be: [leagueData, params.id]",{"range":"203","text":"204"},"Update the dependencies array to be: [queens]",{"range":"205","text":"206"},[638,640],"[currentUser.uid]",[1932,1934],"[leagueData, params.id]",[1800,1802],"[queens]"]